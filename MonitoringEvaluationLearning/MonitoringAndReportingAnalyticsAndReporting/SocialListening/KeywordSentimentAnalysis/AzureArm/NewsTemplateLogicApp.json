{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_sql_name": {
            "defaultValue": "sql",
            "type": "String"
        },
        "sites_refugeebot_name": {
            "defaultValue": "refugeebot",
            "type": "String"
        },
        "servers_amnestyms_name": {
            "defaultValue": "amnestyms",
            "type": "String"
        },
        "connections_sql_1_name": {
            "defaultValue": "sql-1",
            "type": "String"
        },
        "connections_azureml_name": {
            "defaultValue": "azureml",
            "type": "String"
        },
        "sites_AmnestyWebApp_name": {
            "defaultValue": "AmnestyWebApp",
            "type": "String"
        },
        "workflows_TimeTuil_name": {
            "defaultValue": "TimeTuil",
            "type": "String"
        },
        "sites_refugeechatbot_name": {
            "defaultValue": "refugeechatbot",
            "type": "String"
        },
        "workflows_TestLogic_name": {
            "defaultValue": "TestLogic",
            "type": "String"
        },
        "workflows_CodeSample_name": {
            "defaultValue": "CodeSample",
            "type": "String"
        },
        "connections_bingsearch_name": {
            "defaultValue": "bingsearch",
            "type": "String"
        },
        "serverfarms_WestUSPlan_name": {
            "defaultValue": "WestUSPlan",
            "type": "String"
        },
        "workflows_MAINFLOWAPP_name": {
            "defaultValue": "MAINFLOWAPP",
            "type": "String"
        },
        "sites_function06af1xdwag_name": {
            "defaultValue": "function06af1xdwag",
            "type": "String"
        },
        "sites_functiondd32oc8iak_name": {
            "defaultValue": "functiondd32oc8iak",
            "type": "String"
        },
        "workflows_MAINFLOWClone_name": {
            "defaultValue": "MAINFLOWClone",
            "type": "String"
        },
        "workflows_testlogicapps_name": {
            "defaultValue": "testlogicapps",
            "type": "String"
        },
        "workflows_AmnestyNewsFeed_name": {
            "defaultValue": "AmnestyNewsFeed",
            "type": "String"
        },
        "config_web_name": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_LogicAppMainNews_name": {
            "defaultValue": "LogicAppMainNews",
            "type": "String"
        },
        "workflows_notifierLogicApp_name": {
            "defaultValue": "notifierLogicApp",
            "type": "String"
        },
        "workflows_LogicAppScheduler_name": {
            "defaultValue": "LogicAppScheduler",
            "type": "String"
        },
        "config_web_name_1": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_mainflowappnewclone_name": {
            "defaultValue": "mainflowappnewclone",
            "type": "String"
        },
        "config_web_name_2": {
            "defaultValue": "web",
            "type": "String"
        },
        "workflows_AmnestyMainLogicFlow_name": {
            "defaultValue": "AmnestyMainLogicFlow",
            "type": "String"
        },
        "components_Refugee_Botevcsqj_name": {
            "defaultValue": "Refugee_Botevcsqj",
            "type": "String"
        },
        "workflows_LoginAppMainNewsClone_name": {
            "defaultValue": "LoginAppMainNewsClone",
            "type": "String"
        },
        "workflows_oginAppMainNewsClone1_name": {
            "defaultValue": "oginAppMainNewsClone1",
            "type": "String"
        },
        "connections_sqlNotifierConnection_name": {
            "defaultValue": "sqlNotifierConnection",
            "type": "String"
        },
        "slots_Amnesty_name": {
            "defaultValue": "Amnesty",
            "type": "String"
        },
        "workflows_LogicAppHistoricalNews_name": {
            "defaultValue": "LogicAppHistoricalNews",
            "type": "String"
        },
        "storageAccounts_refugeebota9d9_name": {
            "defaultValue": "refugeebota9d9",
            "type": "String"
        },
        "workflows_LogicaAppScheduler_Test_name": {
            "defaultValue": "LogicaAppScheduler_Test",
            "type": "String"
        },
        "config_web_name_3": {
            "defaultValue": "web",
            "type": "String"
        },
        "config_web_name_4": {
            "defaultValue": "web",
            "type": "String"
        },
        "components_Refugeechatbotevcsqj_name": {
            "defaultValue": "Refugeechatbotevcsqj",
            "type": "String"
        },
        "serverfarms_ServicePlan475a59de_8f9b_name": {
            "defaultValue": "ServicePlan475a59de-8f9b",
            "type": "String"
        },
        "advisors_DropIndex_name": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "databases_bingNews_name": {
            "defaultValue": "bingNews",
            "type": "String"
        },
        "databases_SurveyDB_name": {
            "defaultValue": "SurveyDB",
            "type": "String"
        },
        "accounts_BingSearchTest_name": {
            "defaultValue": "BingSearchTest",
            "type": "String"
        },
        "storageAccounts_storage06af1xdwag_name": {
            "defaultValue": "storage06af1xdwag",
            "type": "String"
        },
        "keys_ServiceManaged_name": {
            "defaultValue": "ServiceManaged",
            "type": "String"
        },
        "storageAccounts_refugeechatbot9697_name": {
            "defaultValue": "refugeechatbot9697",
            "type": "String"
        },
        "advisors_CreateIndex_name": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "workspaces_timeutillogs_name": {
            "defaultValue": "timeutillogs",
            "type": "String"
        },
        "databases_Amnesty_New_name": {
            "defaultValue": "Amnesty_New",
            "type": "String"
        },
        "databases_refugeecamp_name": {
            "defaultValue": "refugeecamp",
            "type": "String"
        },
        "commitmentPlans_commitmentplan_name": {
            "defaultValue": "commitmentplan",
            "type": "String"
        },
        "connections_cognitiveservicestextanalytics_name": {
            "defaultValue": "cognitiveservicestextanalytics",
            "type": "String"
        },
        "advisors_DefragmentIndex_name": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "accounts_BingCognitiveService_name": {
            "defaultValue": "BingCognitiveService",
            "type": "String"
        },
        "accounts_TextCognitiveService_name": {
            "defaultValue": "TextCognitiveService",
            "type": "String"
        },
        "storageAccounts_solutiontemplatezrdkwyq4_name": {
            "defaultValue": "solutiontemplatezrdkwyq4",
            "type": "String"
        },
        "storageAccounts_solutiontemplateuyuukl1k_name": {
            "defaultValue": "solutiontemplateuyuukl1k",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "config_web_name_5": {
            "defaultValue": "web",
            "type": "String"
        },
        "advisors_DbParameterization_name": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "databases_Amnesty_StagingDB_name": {
            "defaultValue": "Amnesty_StagingDB",
            "type": "String"
        },
        "encryptionProtector_current_name": {
            "defaultValue": "current",
            "type": "String"
        },
        "firewallRules_pleasechangeme_name": {
            "defaultValue": "pleasechangeme",
            "type": "String"
        },
        "webServices_TopicsWebService06af1xdwag_name": {
            "defaultValue": "TopicsWebService06af1xdwag",
            "type": "String"
        },
        "firewallRules_AllowAzureServices_name": {
            "defaultValue": "AllowAzureServices",
            "type": "String"
        },
        "webServices_EntitiesWebService06af1xdwag_name": {
            "defaultValue": "EntitiesWebService06af1xdwag",
            "type": "String"
        },
        "alertrules_Failure_Anomalies___Refugee_Botevcsqj_name": {
            "defaultValue": "Failure Anomalies - Refugee_Botevcsqj",
            "type": "String"
        },
        "databases_Amnesty_ProductionBackupDB_name": {
            "defaultValue": "Amnesty_ProductionBackupDB",
            "type": "String"
        },
        "advisors_DropIndex_name_1": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "advisors_DropIndex_name_2": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "alertrules_Failure_Anomalies___Refugeechatbotevcsqj_name": {
            "defaultValue": "Failure Anomalies - Refugeechatbotevcsqj",
            "type": "String"
        },
        "webServices_TopicsImagesWebService06af1xdwag_name": {
            "defaultValue": "TopicsImagesWebService06af1xdwag",
            "type": "String"
        },
        "advisors_CreateIndex_name_1": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "advisors_CreateIndex_name_2": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "advisors_DropIndex_name_3": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "advisors_DropIndex_name_4": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "databases_master_name": {
            "defaultValue": "master",
            "type": "String"
        },
        "advisors_CreateIndex_name_3": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "geoBackupPolicies_Default_name": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_CreateIndex_name_4": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "advisors_DefragmentIndex_name_1": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_DefragmentIndex_name_2": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_3": {
            "defaultValue": "Default",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_1": {
            "defaultValue": "Default",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_2": {
            "defaultValue": "Default",
            "type": "String"
        },
        "hostNameBindings_refugeebot.azurewebsites.net_name": {
            "defaultValue": "refugeebot.azurewebsites.net",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_1": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_2": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_DefragmentIndex_name_3": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_4": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_DropIndex_name_5": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "advisors_DbParameterization_name_1": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "advisors_DefragmentIndex_name_4": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_5": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_DbParameterization_name_2": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_3": {
            "defaultValue": "Default",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_4": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_3": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_CreateIndex_name_5": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_4": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_DbParameterization_name_3": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "advisors_DbParameterization_name_4": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "transparentDataEncryption_current_name": {
            "defaultValue": "current",
            "type": "String"
        },
        "hostNameBindings_amnestywebapp.azurewebsites.net_name": {
            "defaultValue": "amnestywebapp.azurewebsites.net",
            "type": "String"
        },
        "advisors_DefragmentIndex_name_5": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_6": {
            "defaultValue": "Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name_1": {
            "defaultValue": "current",
            "type": "String"
        },
        "transparentDataEncryption_current_name_2": {
            "defaultValue": "current",
            "type": "String"
        },
        "hostNameBindings_refugeechatbot.azurewebsites.net_name": {
            "defaultValue": "refugeechatbot.azurewebsites.net",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_5": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_5": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "transparentDataEncryption_current_name_3": {
            "defaultValue": "current",
            "type": "String"
        },
        "advisors_DropIndex_name_6": {
            "defaultValue": "DropIndex",
            "type": "String"
        },
        "advisors_DbParameterization_name_5": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "transparentDataEncryption_current_name_4": {
            "defaultValue": "current",
            "type": "String"
        },
        "advisors_CreateIndex_name_6": {
            "defaultValue": "CreateIndex",
            "type": "String"
        },
        "deployments_9ccddde5370bcac53840878abbaf65ce7ed8f365_name": {
            "defaultValue": "9ccddde5370bcac53840878abbaf65ce7ed8f365",
            "type": "String"
        },
        "deployments_9ccddde5370bcac53840878abbaf65ce7ed8f365_name_1": {
            "defaultValue": "9ccddde5370bcac53840878abbaf65ce7ed8f365",
            "type": "String"
        },
        "hostNameBindings_function06af1xdwag.azurewebsites.net_name": {
            "defaultValue": "function06af1xdwag.azurewebsites.net",
            "type": "String"
        },
        "hostNameBindings_functiondd32oc8iak.azurewebsites.net_name": {
            "defaultValue": "functiondd32oc8iak.azurewebsites.net",
            "type": "String"
        },
        "advisors_DefragmentIndex_name_6": {
            "defaultValue": "DefragmentIndex",
            "type": "String"
        },
        "auditingPolicies_Default_name_7": {
            "defaultValue": "Default",
            "type": "String"
        },
        "transparentDataEncryption_current_name_5": {
            "defaultValue": "current",
            "type": "String"
        },
        "geoBackupPolicies_Default_name_6": {
            "defaultValue": "Default",
            "type": "String"
        },
        "advisors_ForceLastGoodPlan_name_6": {
            "defaultValue": "ForceLastGoodPlan",
            "type": "String"
        },
        "advisors_DbParameterization_name_6": {
            "defaultValue": "DbParameterization",
            "type": "String"
        },
        "transparentDataEncryption_current_name_6": {
            "defaultValue": "current",
            "type": "String"
        },
        "hostNameBindings_amnestywebapp_amnesty.azurewebsites.net_name": {
            "defaultValue": "amnestywebapp-amnesty.azurewebsites.net",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_General|StaleComputers_name": {
            "defaultValue": "LogManagement(timeutillogs)_General|StaleComputers",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|AllEvents_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|AllEvents",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslog_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|AllSyslog",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|WarningEvents_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|WarningEvents",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_General|dataTypeDistribution_name": {
            "defaultValue": "LogManagement(timeutillogs)_General|dataTypeDistribution",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|EventsByEventLog_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|EventsByEventLog",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|EventsByEventsID_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|EventsByEventsID",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|Show404PagesList_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|Show404PagesList",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|ServerRestartTime_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|ServerRestartTime",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|EventsByEventSource_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|EventsByEventSource",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslogByFacility_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|AllSyslogByFacility",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfWarningEvents_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|CountOfWarningEvents",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|ListAllIISLogEntries_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|ListAllIISLogEntries",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslogsWithErrors_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|AllSyslogsWithErrors",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslogByProcessName_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|AllSyslogByProcessName",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_General|dataPointsPerManagementGroup_name": {
            "defaultValue": "LogManagement(timeutillogs)_General|dataPointsPerManagementGroup",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_General|AlphabeticallySortedComputers_name": {
            "defaultValue": "LogManagement(timeutillogs)_General|AlphabeticallySortedComputers",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|IISLogEntriesForClientIP_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|IISLogEntriesForClientIP",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|EventsWithStartedinEventID_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|EventsWithStartedinEventID",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|EventsInOMBetween2000to3000_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|EventsInOMBetween2000to3000",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|DisplayBreakdownRespondCodes_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|DisplayBreakdownRespondCodes",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|NoOfConnectionsToOMSDKService_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|NoOfConnectionsToOMSDKService",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|FindMaximumTimeTakenForEachPage_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|FindMaximumTimeTakenForEachPage",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPUserAgent_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPUserAgent",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesSentByClientIPAddress_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|TotalBytesSentByClientIPAddress",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeHTTPMethod_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeHTTPMethod",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLForHost_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLForHost",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesClientIPAddress_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesClientIPAddress",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPRequestMethod_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPRequestMethod",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachIISComputer_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachIISComputer",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChanged_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChanged",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|ShowServersThrowingInternalServerError_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|ShowServersThrowingInternalServerError",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeByClientIPAddress_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeByClientIPAddress",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachAzureRoleInstance_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachAzureRoleInstance",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLRequestedByClient_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLRequestedByClient",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByHostRequestedByClient_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByHostRequestedByClient",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByClientIPAddress_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByClientIPAddress",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChangedByMachines_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChangedByMachines",
            "type": "String"
        },
        "savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress_name": {
            "defaultValue": "LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.CognitiveServices/accounts/BingCognitiveService'.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "S5"
            },
            "kind": "Bing.Search.v7",
            "name": "[parameters('accounts_BingCognitiveService_name')]",
            "apiVersion": "2016-02-01-preview",
            "location": "global",
            "scale": null,
            "properties": {},
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.CognitiveServices/accounts/BingSearchTest'.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "F0"
            },
            "kind": "Bing.Search.v7",
            "name": "[parameters('accounts_BingSearchTest_name')]",
            "apiVersion": "2016-02-01-preview",
            "location": "global",
            "scale": null,
            "properties": {},
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.CognitiveServices/accounts/TextCognitiveService'.",
            "type": "Microsoft.CognitiveServices/accounts",
            "sku": {
                "name": "S1"
            },
            "kind": "TextAnalytics",
            "name": "[parameters('accounts_TextCognitiveService_name')]",
            "apiVersion": "2016-02-01-preview",
            "location": "West US",
            "scale": null,
            "properties": {},
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/microsoft.insights/alertrules/Failure Anomalies - Refugeechatbotevcsqj'.",
            "type": "microsoft.insights/alertrules",
            "name": "[parameters('alertrules_Failure_Anomalies___Refugeechatbotevcsqj_name')]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "tags": {
                "hidden-link:/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/microsoft.insights/components/Refugeechatbotevcsqj": "Resource"
            },
            "scale": null,
            "properties": {
                "name": "[parameters('alertrules_Failure_Anomalies___Refugeechatbotevcsqj_name')]",
                "description": "",
                "isEnabled": true,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('microsoft.insights/components', parameters('components_Refugeechatbotevcsqj_name'))]",
                        "metricNamespace": null,
                        "metricName": "advanced::A3108E3D-5E26-44CF-B232-783F5E20EF10::ewAiAEgAeQBwAGUAcgBpAG8AbgBBAHAAcABsAGkAYwBhAHQAaQBvAG4AUwBpAGQAIgA6AG4AdQBsAGwALAAiAEgAeQBwAGUAcgBpAG8AbgBTAHUAYgBqAGUAYwB0AFMAaQBkACIAOgBuAHUAbABsACwAIgBIAHkAcABlAHIAaQBvAG4ATwBiAHMAZQByAHYAZQByAFMAaQBkACIAOgBuAHUAbABsACwAIgBDAHUAcwB0AG8AbQBlAHIAQQBjAGMAbwB1AG4AdABJAGQAIgA6ACIAMAAwADAAMAAwADAAMAAwAC0AMAAwADAAMAAtADAAMAAwADAALQAwADAAMAAwAC0AMAAwADAAMAAwADAAMAAwADAAMAAwADAAIgAsACIAQQBwAHAAbABpAGMAYQB0AGkAbwBuAE4AYQBtAGUAIgA6AG4AdQBsAGwALAAiAEEAcABwAGwAaQBjAGEAdABpAG8AbgBJAGQAIgA6AG4AdQBsAGwALAAiAFAAcgBvAGYAaQBsAGUASQBkACIAOgAwACwAIgBXAGkAbgBkAG8AdwBTAGkAegBlAEkAbgBNAGkAbgB1AHQAZQBzACIAOgA2ADAALAAiAE0AZQB0AHIAaQBjAE4AYQBtAGUAIgA6ACIAIgAsACIAVABoAHIAZQBzAGgAbwBsAGQAIgA6ADIALgAwACwAIgBBAGwAZQByAHQAVABlAG0AcABsAGEAdABlAEkAZAAiADoAIgAiACwAIgBSAHUAbABlAEkAZAAiADoAIgAiACwAIgBSAHUAbABlAE4AYQBtAGUAIgA6ACIAIgAsACIAUgB1AGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AIgA6ACIAIgAsACIAUgBlAHMAbwB1AHIAYwBlAEkAZAAiADoAbgB1AGwAbAAsACIAUwB1AGIAcwBjAHIAaQBwAHQAaQBvAG4ASQBkACIAOgBuAHUAbABsACwAIgBBAGcAZwByAGUAZwBhAHQAZQBGAHUAbgBjAHQAaQBvAG4AIgA6ACIAIgAsACIAQwBvAG0AcABhAHIAaQBzAG8AbgBPAHAAZQByAGEAdABvAHIAIgA6ACIAewBcACIAQgBhAHMAZQBsAGkAbgBlAFQAaQBtAGUAcwBwAGEAbgBcACIAOgBcACIAMAAwADoANAAwADoAMAAwAFwAIgAsAFwAIgBJAG4AcwBpAGcAaAB0AHMAUwBlAHIAdgBpAGMAZQBMAGEAZwBcACIAOgBcACIAMAAwADoAMAAwADoAMAAwAFwAIgAsAFwAIgBCAHUAZgBmAGUAcgBUAGkAbQBlAFwAIgA6AFwAIgAwADAAOgAwADEAOgAwADAAXAAiACwAXAAiAEIAbABvAGIAUwB0AG8AcgBhAGcAZQBMAG8AZwBnAGkAbgBnAEUAbgBhAGIAbABlAGQAXAAiADoAZgBhAGwAcwBlACwAXAAiAFUAcwBlAHIAUwB1AHAAcAByAGUAcwBzAGkAbwBuAHMAXAAiADoAbgB1AGwAbAAsAFwAIgBQAHIAbwBmAGkAbABlAEkAZABcACIAOgAwACwAXAAiAEUAbQBhAGkAbABUAHkAcABlAFwAIgA6ADAALABcACIAUgBkAGQARgBhAGkAbAB1AHIAZQBzAFMAcABpAGsAZQBUAGgAcgBlAHMAaABvAGwAZABcACIAOgAzAC4AMAAsAFwAIgBSAGEAdwBQAHIAbwBhAGMAdABpAHYAZQBSAHUAbABlAEMAbwBuAGYAaQBnAFwAIgA6AG4AdQBsAGwAfQAiACwAIgBFAG4AYQBiAGwAZQBTAGUAbgBkAEUAbQBhAGkAbABUAG8AQwB1AHMAdABvAG0AIgA6AGYAYQBsAHMAZQAsACIAQwB1AHMAdABvAG0ARQBtAGEAaQBsAHMARQBuAGMAbwBkAGUAZAAiADoAIgAiACwAIgBFAG4AYQBiAGwAZQBTAGUAbgBkAEUAbQBhAGkAbABUAG8ATwB3AG4AZQByAHMAIgA6AGYAYQBsAHMAZQB9AA=="
                    },
                    "operator": "GreaterThan",
                    "threshold": 2,
                    "windowSize": "PT1H"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_Refugeechatbotevcsqj_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/microsoft.insights/alertrules/Failure Anomalies - Refugee_Botevcsqj'.",
            "type": "microsoft.insights/alertrules",
            "name": "[parameters('alertrules_Failure_Anomalies___Refugee_Botevcsqj_name')]",
            "apiVersion": "2014-04-01",
            "location": "Southeast Asia",
            "tags": {
                "hidden-link:/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/microsoft.insights/components/Refugee_Botevcsqj": "Resource"
            },
            "scale": null,
            "properties": {
                "name": "[parameters('alertrules_Failure_Anomalies___Refugee_Botevcsqj_name')]",
                "description": "",
                "isEnabled": true,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('microsoft.insights/components', parameters('components_Refugee_Botevcsqj_name'))]",
                        "metricNamespace": null,
                        "metricName": "advanced::A3108E3D-5E26-44CF-B232-783F5E20EF10::ewAiAEgAeQBwAGUAcgBpAG8AbgBBAHAAcABsAGkAYwBhAHQAaQBvAG4AUwBpAGQAIgA6AG4AdQBsAGwALAAiAEgAeQBwAGUAcgBpAG8AbgBTAHUAYgBqAGUAYwB0AFMAaQBkACIAOgBuAHUAbABsACwAIgBIAHkAcABlAHIAaQBvAG4ATwBiAHMAZQByAHYAZQByAFMAaQBkACIAOgBuAHUAbABsACwAIgBDAHUAcwB0AG8AbQBlAHIAQQBjAGMAbwB1AG4AdABJAGQAIgA6ACIAMAAwADAAMAAwADAAMAAwAC0AMAAwADAAMAAtADAAMAAwADAALQAwADAAMAAwAC0AMAAwADAAMAAwADAAMAAwADAAMAAwADAAIgAsACIAQQBwAHAAbABpAGMAYQB0AGkAbwBuAE4AYQBtAGUAIgA6AG4AdQBsAGwALAAiAEEAcABwAGwAaQBjAGEAdABpAG8AbgBJAGQAIgA6AG4AdQBsAGwALAAiAFAAcgBvAGYAaQBsAGUASQBkACIAOgAwACwAIgBXAGkAbgBkAG8AdwBTAGkAegBlAEkAbgBNAGkAbgB1AHQAZQBzACIAOgA2ADAALAAiAE0AZQB0AHIAaQBjAE4AYQBtAGUAIgA6ACIAIgAsACIAVABoAHIAZQBzAGgAbwBsAGQAIgA6ADIALgAwACwAIgBBAGwAZQByAHQAVABlAG0AcABsAGEAdABlAEkAZAAiADoAIgAiACwAIgBSAHUAbABlAEkAZAAiADoAIgAiACwAIgBSAHUAbABlAE4AYQBtAGUAIgA6ACIAIgAsACIAUgB1AGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AIgA6ACIAIgAsACIAUgBlAHMAbwB1AHIAYwBlAEkAZAAiADoAbgB1AGwAbAAsACIAUwB1AGIAcwBjAHIAaQBwAHQAaQBvAG4ASQBkACIAOgBuAHUAbABsACwAIgBBAGcAZwByAGUAZwBhAHQAZQBGAHUAbgBjAHQAaQBvAG4AIgA6ACIAIgAsACIAQwBvAG0AcABhAHIAaQBzAG8AbgBPAHAAZQByAGEAdABvAHIAIgA6ACIAewBcACIAQgBhAHMAZQBsAGkAbgBlAFQAaQBtAGUAcwBwAGEAbgBcACIAOgBcACIAMAAwADoANAAwADoAMAAwAFwAIgAsAFwAIgBJAG4AcwBpAGcAaAB0AHMAUwBlAHIAdgBpAGMAZQBMAGEAZwBcACIAOgBcACIAMAAwADoAMAAwADoAMAAwAFwAIgAsAFwAIgBCAHUAZgBmAGUAcgBUAGkAbQBlAFwAIgA6AFwAIgAwADAAOgAwADEAOgAwADAAXAAiACwAXAAiAEIAbABvAGIAUwB0AG8AcgBhAGcAZQBMAG8AZwBnAGkAbgBnAEUAbgBhAGIAbABlAGQAXAAiADoAZgBhAGwAcwBlACwAXAAiAFUAcwBlAHIAUwB1AHAAcAByAGUAcwBzAGkAbwBuAHMAXAAiADoAbgB1AGwAbAAsAFwAIgBQAHIAbwBmAGkAbABlAEkAZABcACIAOgAwACwAXAAiAEUAbQBhAGkAbABUAHkAcABlAFwAIgA6ADAALABcACIAUgBkAGQARgBhAGkAbAB1AHIAZQBzAFMAcABpAGsAZQBUAGgAcgBlAHMAaABvAGwAZABcACIAOgAzAC4AMAAsAFwAIgBSAGEAdwBQAHIAbwBhAGMAdABpAHYAZQBSAHUAbABlAEMAbwBuAGYAaQBnAFwAIgA6AG4AdQBsAGwAfQAiACwAIgBFAG4AYQBiAGwAZQBTAGUAbgBkAEUAbQBhAGkAbABUAG8AQwB1AHMAdABvAG0AIgA6AGYAYQBsAHMAZQAsACIAQwB1AHMAdABvAG0ARQBtAGEAaQBsAHMARQBuAGMAbwBkAGUAZAAiADoAIgAiACwAIgBFAG4AYQBiAGwAZQBTAGUAbgBkAEUAbQBhAGkAbABUAG8ATwB3AG4AZQByAHMAIgA6AGYAYQBsAHMAZQB9AA=="
                    },
                    "operator": "GreaterThan",
                    "threshold": 2,
                    "windowSize": "PT1H"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_Refugee_Botevcsqj_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/microsoft.insights/components/Refugee_Botevcsqj'.",
            "type": "microsoft.insights/components",
            "kind": "web",
            "name": "[parameters('components_Refugee_Botevcsqj_name')]",
            "apiVersion": "2015-05-01",
            "location": "southeastasia",
            "tags": {
                "hidden-link:/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.BotService/botServices/Refugee_Bot": "Resource",
                "hidden-link:/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeebot": "Resource"
            },
            "scale": null,
            "properties": {
                "Application_Type": "web",
                "Flow_Type": null,
                "Request_Source": null,
                "HockeyAppId": null,
                "SamplingPercentage": null
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/microsoft.insights/components/Refugeechatbotevcsqj'.",
            "type": "microsoft.insights/components",
            "kind": "web",
            "name": "[parameters('components_Refugeechatbotevcsqj_name')]",
            "apiVersion": "2015-05-01",
            "location": "eastus",
            "tags": {
                "hidden-link:/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.BotService/botServices/Refugeechatbot": "Resource",
                "hidden-link:/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeechatbot": "Resource"
            },
            "scale": null,
            "properties": {
                "Application_Type": "web",
                "Flow_Type": null,
                "Request_Source": null,
                "HockeyAppId": null,
                "SamplingPercentage": null
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/AmnestyMainLogicFlow'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_AmnestyMainLogicFlow_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "AbstractExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "query": "@{body('Get_row')?['Keywords']}",
                                            "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/AbstractExtractor')]"
                                        }
                                    }
                                },
                                "ArticleCleanerWebhook": {
                                    "runAfter": {
                                        "ExtractArticle": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@body('ExtractArticle')['bodyInHtml']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ASCIICleanerWebhook')]"
                                        }
                                    }
                                },
                                "Detect_Sentiment": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/sentiment"
                                    }
                                },
                                "ExtractArticle": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}",
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ArticleExtractor')]"
                                        }
                                    }
                                },
                                "For_each": {
                                    "foreach": "@body('Key_Phrases')?['keyPhrases']",
                                    "actions": {
                                        "Execute_stored_procedure": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                                    "category": "@items('For_each_2')?['category']",
                                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                                    "cleanedTextLength": "@body('HTMLStripperWebHook')['NoTagsLength']",
                                                    "docid": "@{Json(body('UrlCleaner'))?['triggerId']}",
                                                    "imageHeight": 3500,
                                                    "imageUrl": "@{Json(body('MainImageExtractor'))?['ImageUrl']}",
                                                    "imageWidth": 3500,
                                                    "ingestDayPrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestHourPrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestMinutePrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestMonthPrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestTimestamp": "@items('For_each_2')?['datePublished']",
                                                    "ingestWeekPrecision": "@items('For_each_2')?['datePublished']",
                                                    "keyPhraseJson": "@{body('Key_Phrases')?['keyPhrases']}",
                                                    "publishedDayPrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedHourPrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedMinutePrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedMonthPrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedTimestamp": "@items('For_each_2')?['datePublished']",
                                                    "publishedWeekPrecision": "@items('For_each_2')?['datePublished']",
                                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                                    "sourceDomain": "@{body('UrlDomainWebHook')['host']}",
                                                    "sourceUrl": "@{Json(body('UrlCleaner'))?['newUri']}",
                                                    "text": "@{body('HTMLstripperWebHook')['Scrubbed']}",
                                                    "textLength": "@body('HTMLstripperWebHook')['ScrubbedLength']",
                                                    "title": "@items('For_each_2')?['name']",
                                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')['entities']}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Detect_Sentiment": [
                                            "Succeeded"
                                        ],
                                        "Key_Phrases": [
                                            "Succeeded"
                                        ],
                                        "MainImageExtractor": [
                                            "Succeeded"
                                        ],
                                        "UrlDomainWebhook": [
                                            "Succeeded"
                                        ],
                                        "UserDefinedEntitiesExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTMLStripperWebhook": {
                                    "runAfter": {
                                        "ArticleCleanerWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('ArticleCleanerWebHook')['text']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/HTMLCleanerWebhook')]"
                                        }
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@{Json(body('UrlCleaner'))?['newUri']}"
                                    }
                                },
                                "Key_Phrases": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/keyPhrases"
                                    }
                                },
                                "MainImageExtractor": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/MainImageExtractor')]"
                                        }
                                    }
                                },
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlCleaner')]"
                                        }
                                    }
                                },
                                "UrlDomainWebhook": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlDomainWebhook')]"
                                        }
                                    }
                                },
                                "UserDefinedEntitiesExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UserDefinedEntities')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "5",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "@body('Get_row')?['NewsInput']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/AmnestyNewsFeed'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_AmnestyNewsFeed_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "TimeUtilsWebhook_2": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@items('For_each')?['datePublished']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "ArticleExtractor": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}",
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ArticleExtractor')]"
                                        }
                                    }
                                },
                                "Detect_Sentiment": {
                                    "runAfter": {
                                        "ArticleExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@items('For_each_2')?['description']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/sentiment"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@{Json(body('UrlCleaner'))?['newUri']}"
                                    }
                                },
                                "Key_Phrases": {
                                    "runAfter": {
                                        "ArticleExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@items('For_each_2')?['description']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/keyPhrases"
                                    }
                                },
                                "MainImageExtractor": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}",
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/MainImageExtractor')]"
                                        }
                                    }
                                },
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlCleaner')]"
                                        }
                                    }
                                },
                                "UrlDomainWebhook": {
                                    "runAfter": {
                                        "ArticleExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlDomainWebhook')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "q": "@body('Get_row')?['NewsInput']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        },
                        "TimeUtilsWebhook": {
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@utcNow()"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/CodeSample'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_CodeSample_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {},
                    "actions": {},
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/LogicaAppScheduler_Test'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_LogicaAppScheduler_Test_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Append_Topic_Phrases": {
                            "runAfter": {
                                "Merge_Tables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_create_topic_key_phrase]'))}"
                            }
                        },
                        "Clean_Bulk_Tables": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_clean_stage_tables]'))}"
                            }
                        },
                        "Entity_AzureML": {
                            "runAfter": {
                                "Clean_Bulk_Tables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureml']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/None",
                                "queries": {
                                    "API_Key": "V1hzN1XqvBPdjS9ZuLCQhT0jEZRyNTGMWMjDGXVyw4MBJkjanKJGm65jUzDwM3LksuEDyaGV+OMrA9OZ9IdNmw==",
                                    "API_URL": "https://ussouthcentral.services.azureml.net/subscriptions/6efc9adaf2b2472d9d8efb0ab1e29d0c/services/8f90337f4d4944c48f17267e1ca0167f/jobs?api-version=2.0"
                                }
                            }
                        },
                        "Merge_Tables": {
                            "runAfter": {
                                "Entity_AzureML": [
                                    "Succeeded"
                                ],
                                "Topic_Images_AzureML": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_mergedata]'))}"
                            }
                        },
                        "Topic_AzureML": {
                            "runAfter": {
                                "Clean_Bulk_Tables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureml']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/None",
                                "queries": {
                                    "API_Key": "+WGnIaa3rPxFATPaBf2EO9pOa8WoFNdpZimXGzwx0MYzu+rMsyB99lVdEp57kx56a4k+dXdgwwSfQPuMa6xslA==",
                                    "API_URL": "https://ussouthcentral.services.azureml.net/subscriptions/6efc9adaf2b2472d9d8efb0ab1e29d0c/services/2a17fdf11c1e4d199eb2c2ca078bd1ad/jobs?api-version=2.0"
                                }
                            }
                        },
                        "Topic_Images_AzureML": {
                            "runAfter": {
                                "Topic_AzureML": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureml']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/None",
                                "queries": {
                                    "API_Key": "25KeGSugxiq/j9TUpYZ1W/PIfVcElh0EHHIcRAWTyYl/KbUJ58i/stCDwBUrEcLNdx8/Ie5WHNFCBoClcjjVvA==",
                                    "API_URL": "https://ussouthcentral.services.azureml.net/subscriptions/6efc9adaf2b2472d9d8efb0ab1e29d0c/services/84f5e17ec53c4b749a367a1d3745ba41/jobs?api-version=2.0"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureml": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureml_name'))]",
                                "connectionName": "azureml",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/azureml"
                            },
                            "sql_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureml_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/LogicAppHistoricalNews'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_LogicAppHistoricalNews_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "schema": {}
                                }
                            }
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "AbstractExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebHook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "query": "@{actions('List_news_by_query')['inputs']['queries']['q']}",
                                            "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/AbstractExtractor')]"
                                        }
                                    }
                                },
                                "UserDefinedEntitiesExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebHook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UserDefinedEntities')]"
                                        }
                                    }
                                },
                                "ArticleCleanerWebHook": {
                                    "runAfter": {
                                        "ExtractArticle": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@body('ExtractArticle')['bodyInHtml']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ASCIICleanerWebhook')]"
                                        }
                                    }
                                },
                                "Detect_Sentiment": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/sentiment"
                                    }
                                },
                                "ExtractArticle": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}",
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ArticleExtractor')]"
                                        }
                                    }
                                },
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{item()?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlCleaner')]"
                                        }
                                    }
                                },
                                "HTMLStripperWebHook": {
                                    "runAfter": {
                                        "ArticleCleanerWebHook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('ArticleCleanerWebHook')['text']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/HTMLCleanerWebhook')]"
                                        }
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@Json(body('UrlCleaner'))?['newUri']"
                                    }
                                },
                                "MainImageExtractor": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/MainImageExtractor')]"
                                        }
                                    }
                                },
                                "InsertDocument": {
                                    "runAfter": {
                                        "Detect_Sentiment": [
                                            "Succeeded"
                                        ],
                                        "TimeUtilsWebHook": [
                                            "Succeeded"
                                        ],
                                        "TimeUtilsWebHook_2": [
                                            "Succeeded"
                                        ],
                                        "MainImageExtractor": [
                                            "Succeeded"
                                        ],
                                        "UrlDomainWebHook": [
                                            "Succeeded"
                                        ],
                                        "UserDefinedEntitiesExtractor": [
                                            "Succeeded"
                                        ],
                                        "Key_Phrases": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "category": "@{item()?['category']}",
                                            "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                            "cleanedTextLength": "@{body('HTMLStripperWebHook')['NoTagsLength']}",
                                            "abstract": "@{body('AbstractExtractor')?['Snippet']}",
                                            "docid": "@Json(body('UrlCleaner'))?['triggerId']",
                                            "imageHeight": "@{item()?['image']?['thumbnail']?['height']}",
                                            "imageUrl": "@Json(body('MainImageExtractor'))?['ImageUrl']",
                                            "imageWidth": "@{item()?['image']?['thumbnail']?['width']}",
                                            "ingestDayPrecision": "@Json(body('TimeUtilsWebHook'))?['DayPrecision']",
                                            "ingestHourPrecision": "@Json(body('TimeUtilsWebHook'))?['HourPrecision']",
                                            "ingestMinutePrecision": "@Json(body('TimeUtilsWebHook'))?['MinutePrecision']",
                                            "ingestMonthPrecision": "@Json(body('TimeUtilsWebHook'))?['MonthPrecision']",
                                            "ingestTimestamp": "@Json(body('TimeUtilsWebHook'))?['Timestamp']",
                                            "ingestWeekPrecision": "@Json(body('TimeUtilsWebHook'))?['WeekPrecision']",
                                            "keyPhraseJson": "@{body('Key_Phrases')?['keyPhrases']}",
                                            "publishedDayPrecision": "@Json(body('TimeUtilsWebHook_2'))?['DayPrecision']",
                                            "publishedHourPrecision": "@Json(body('TimeUtilsWebHook_2'))?['HourPrecision']",
                                            "publishedMinutePrecision": "@Json(body('TimeUtilsWebHook_2'))?['MinutePrecision']",
                                            "publishedMonthPrecision": "@Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']",
                                            "publishedTimestamp": "@Json(body('TimeUtilsWebHook_2'))?['Timestamp']",
                                            "publishedWeekPrecision": "@Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']",
                                            "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                            "sourceDomain": "@{body('UrlDomainWebHook')?['host']}",
                                            "sourceUrl": "@Json(body('UrlCleaner'))?['newUri']",
                                            "text": "@{body('HTMLStripperWebHook')['Scrubbed']}",
                                            "textLength": "@{body('HTMLStripperWebHook')['ScrubbedLength']}",
                                            "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')?['entities']}",
                                            "title": "@{item()?['name']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                                    }
                                },
                                "Key_Phrases": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/keyPhrases"
                                    }
                                },
                                "TimeUtilsWebHook": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@utcnow()"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                },
                                "TimeUtilsWebHook_2": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@{item()?['datePublished']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                },
                                "UrlDomainWebHook": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlDomainWebhook')]"
                                        }
                                    }
                                },
                                "For_each_2": {
                                    "foreach": "@body('AbstractExtractor')?['Matches']",
                                    "actions": {
                                        "Insert_row": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "documentId": "@Json(body('UrlCleaner'))?['triggerId']",
                                                    "searchterms": "@item()['match']"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[documentsearchterms]'))}/items"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Until_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "100",
                                    "mkt": "en-US",
                                    "q": "Death Penalty , Honor Killing , Capital Punishment , Life in Prison ,  Death Row , Executions",
                                    "safeSearch": "Moderate"
                                }
                            }
                        },
                        "Until": {
                            "actions": {
                                "TriggerHistory_2": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {},
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TriggerHistory')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": "@equals(body('TriggerHistory_2'), 'true')",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "Until_2": {
                            "actions": {
                                "TriggerHistorySentiment": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {},
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TriggerHistorySentiment')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Until": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(body('TriggerHistorySentiment'), 'true')",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/LogicAppMainNews'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_LogicAppMainNews_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "On_new_news_article": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 5
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/trigger/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "\"Death Penalty\" \"Honor Killing\" \"Capital Punishment\" \"Life Prison\" \"Death Row\" Executions",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "actions": {
                        "AbstractExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "query": "@{trigger()['inputs']['queries']['q']}",
                                    "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/AbstractExtractor')]"
                                }
                            }
                        },
                        "ArticleCleanerWebHook": {
                            "runAfter": {
                                "ExtractArticle": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@body('ExtractArticle')['bodyInHtml']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ASCIICleanerWebhook')]"
                                }
                            }
                        },
                        "Detect_Sentiment": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/sentiment"
                            }
                        },
                        "ExtractArticle": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}",
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ArticleExtractor')]"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('AbstractExtractor')?['Matches']",
                            "actions": {
                                "Insert_row": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "documentId": "@Json(body('UrlCleaner'))?['triggerId']",
                                            "searchterms": "@item()['match']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[documentsearchterms]'))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "InsertDocument": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTMLStripperWebHook": {
                            "runAfter": {
                                "ArticleCleanerWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('ArticleCleanerWebHook')['text']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/HTMLCleanerWebhook')]"
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "UrlCleaner": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@Json(body('UrlCleaner'))?['newUri']"
                            }
                        },
                        "InsertDocument": {
                            "runAfter": {
                                "Detect_Sentiment": [
                                    "Succeeded"
                                ],
                                "Key_Phrases": [
                                    "Succeeded"
                                ],
                                "MainImageExtractor": [
                                    "Succeeded"
                                ],
                                "TimeUtilsWebHook": [
                                    "Succeeded"
                                ],
                                "TimeUtilsWebHook_2": [
                                    "Succeeded"
                                ],
                                "UrlDomainWebHook": [
                                    "Succeeded"
                                ],
                                "UserDefinedEntitiesExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                    "category": "@{triggerBody()?['category']}",
                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                    "cleanedTextLength": "@{body('HTMLStripperWebHook')['NoTagsLength']}",
                                    "docid": "@Json(body('UrlCleaner'))?['triggerId']",
                                    "imageHeight": "@triggerBody()?['image']?['thumbnail']?['height']",
                                    "imageUrl": "@Json(body('MainImageExtractor'))?['ImageUrl']",
                                    "imageWidth": "@triggerBody()?['image']?['thumbnail']?['width']",
                                    "ingestDayPrecision": "@Json(body('TimeUtilsWebHook'))?['DayPrecision']",
                                    "ingestHourPrecision": "@Json(body('TimeUtilsWebHook'))?['HourPrecision']",
                                    "ingestMinutePrecision": "@Json(body('TimeUtilsWebHook'))?['MinutePrecision']",
                                    "ingestMonthPrecision": "@Json(body('TimeUtilsWebHook'))?['MonthPrecision']",
                                    "ingestTimestamp": "@Json(body('TimeUtilsWebHook'))?['Timestamp']",
                                    "ingestWeekPrecision": "@Json(body('TimeUtilsWebHook'))?['WeekPrecision']",
                                    "keyPhraseJson": "@{body('Key_Phrases')?['keyPhrases']}",
                                    "publishedDayPrecision": "@Json(body('TimeUtilsWebHook_2'))?['DayPrecision']",
                                    "publishedHourPrecision": "@Json(body('TimeUtilsWebHook_2'))?['HourPrecision']",
                                    "publishedMinutePrecision": "@Json(body('TimeUtilsWebHook_2'))?['MinutePrecision']",
                                    "publishedMonthPrecision": "@Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']",
                                    "publishedTimestamp": "@Json(body('TimeUtilsWebHook_2'))?['Timestamp']",
                                    "publishedWeekPrecision": "@Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']",
                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                    "sourceDomain": "@{body('UrlDomainWebHook')?['host']}",
                                    "sourceUrl": "@Json(body('UrlCleaner'))?['newUri']",
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}",
                                    "textLength": "@{body('HTMLStripperWebHook')['ScrubbedLength']}",
                                    "title": "@{triggerBody()?['name']}",
                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')?['entities']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                            }
                        },
                        "Key_Phrases": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/keyPhrases"
                            }
                        },
                        "MainImageExtractor": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/MainImageExtractor')]"
                                }
                            }
                        },
                        "TimeUtilsWebHook": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@utcnow()"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                }
                            }
                        },
                        "TimeUtilsWebHook_2": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@triggerBody()?['datePublished']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                }
                            }
                        },
                        "UrlCleaner": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "url": "@{triggerBody()?['url']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlCleaner')]"
                                }
                            }
                        },
                        "UrlDomainWebHook": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlDomainWebhook')]"
                                }
                            }
                        },
                        "UserDefinedEntitiesExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UserDefinedEntities')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/LogicAppScheduler'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_LogicAppScheduler_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 12,
                                "timeZone": "Pacific Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Append_Topic_Phrases": {
                            "runAfter": {
                                "Merge_Tables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_create_topic_key_phrase]'))}"
                            }
                        },
                        "Clean_Bulk_Tables": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_clean_stage_tables]'))}"
                            }
                        },
                        "Entity_AzureML": {
                            "runAfter": {
                                "Clean_Bulk_Tables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureml']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/None",
                                "queries": {
                                    "API_Key": "V1hzN1XqvBPdjS9ZuLCQhT0jEZRyNTGMWMjDGXVyw4MBJkjanKJGm65jUzDwM3LksuEDyaGV+OMrA9OZ9IdNmw==",
                                    "API_URL": "https://ussouthcentral.services.azureml.net/subscriptions/6efc9adaf2b2472d9d8efb0ab1e29d0c/services/8f90337f4d4944c48f17267e1ca0167f/jobs?api-version=2.0"
                                }
                            }
                        },
                        "Merge_Tables": {
                            "runAfter": {
                                "Entity_AzureML": [
                                    "Succeeded"
                                ],
                                "Topic_Images_AzureML": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_mergedata]'))}"
                            }
                        },
                        "Topic_AzureML": {
                            "runAfter": {
                                "Clean_Bulk_Tables": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureml']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/None",
                                "queries": {
                                    "API_Key": "+WGnIaa3rPxFATPaBf2EO9pOa8WoFNdpZimXGzwx0MYzu+rMsyB99lVdEp57kx56a4k+dXdgwwSfQPuMa6xslA==",
                                    "API_URL": "https://ussouthcentral.services.azureml.net/subscriptions/6efc9adaf2b2472d9d8efb0ab1e29d0c/services/2a17fdf11c1e4d199eb2c2ca078bd1ad/jobs?api-version=2.0"
                                }
                            }
                        },
                        "Topic_Images_AzureML": {
                            "runAfter": {
                                "Topic_AzureML": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureml']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/None",
                                "queries": {
                                    "API_Key": "25KeGSugxiq/j9TUpYZ1W/PIfVcElh0EHHIcRAWTyYl/KbUJ58i/stCDwBUrEcLNdx8/Ie5WHNFCBoClcjjVvA==",
                                    "API_URL": "https://ussouthcentral.services.azureml.net/subscriptions/6efc9adaf2b2472d9d8efb0ab1e29d0c/services/84f5e17ec53c4b749a367a1d3745ba41/jobs?api-version=2.0"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureml": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureml_name'))]",
                                "connectionName": "azureml",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/azureml"
                            },
                            "sql_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureml_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/LoginAppMainNewsClone'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_LoginAppMainNewsClone_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "On_new_news_article": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 5
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/trigger/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "\"Death Penalty\"",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "actions": {
                        "AbstractExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "query": "@{trigger()['inputs']['queries']['q']}",
                                    "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/AbstractExtractor')]"
                                }
                            }
                        },
                        "ArticleCleanerWebHook": {
                            "runAfter": {
                                "ExtractArticle": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@body('ExtractArticle')['bodyInHtml']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ASCIICleanerWebhook')]"
                                }
                            }
                        },
                        "Detect_Sentiment": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/sentiment"
                            }
                        },
                        "ExtractArticle": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}",
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ArticleExtractor')]"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('AbstractExtractor')?['Matches']",
                            "actions": {
                                "Insert_row": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "documentId": "@Json(body('UrlCleaner'))?['triggerId']",
                                            "searchterms": "@item()['match']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[documentsearchterms]'))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "InsertDocument": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlCleaner')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_3": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "TimeUtilsWebHook_2": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@triggerBody()?['datePublished']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {
                                "List_news_by_query_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "HTMLStripperWebHook": {
                            "runAfter": {
                                "ArticleCleanerWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('ArticleCleanerWebHook')['text']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/HTMLCleanerWebhook')]"
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@Json(body('UrlCleaner'))?['newUri']"
                            }
                        },
                        "InsertDocument": {
                            "runAfter": {
                                "Detect_Sentiment": [
                                    "Succeeded"
                                ],
                                "For_each_3": [
                                    "Succeeded"
                                ],
                                "Key_Phrases": [
                                    "Succeeded"
                                ],
                                "MainImageExtractor": [
                                    "Succeeded"
                                ],
                                "TimeUtilsWebHook": [
                                    "Succeeded"
                                ],
                                "UrlDomainWebHook": [
                                    "Succeeded"
                                ],
                                "UserDefinedEntitiesExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                    "category": "@{triggerBody()?['category']}",
                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                    "cleanedTextLength": "@{body('HTMLStripperWebHook')['NoTagsLength']}",
                                    "docid": "@Json(body('UrlCleaner'))?['triggerId']",
                                    "imageHeight": "@triggerBody()?['image']?['thumbnail']?['height']",
                                    "imageUrl": "@Json(body('MainImageExtractor'))?['ImageUrl']",
                                    "imageWidth": "@triggerBody()?['image']?['thumbnail']?['width']",
                                    "ingestDayPrecision": "@Json(body('TimeUtilsWebHook'))?['DayPrecision']",
                                    "ingestHourPrecision": "@Json(body('TimeUtilsWebHook'))?['HourPrecision']",
                                    "ingestMinutePrecision": "@Json(body('TimeUtilsWebHook'))?['MinutePrecision']",
                                    "ingestMonthPrecision": "@Json(body('TimeUtilsWebHook'))?['MonthPrecision']",
                                    "ingestTimestamp": "@Json(body('TimeUtilsWebHook'))?['Timestamp']",
                                    "ingestWeekPrecision": "@Json(body('TimeUtilsWebHook'))?['WeekPrecision']",
                                    "keyPhraseJson": "@{body('Key_Phrases')?['keyPhrases']}",
                                    "publishedDayPrecision": "@Json(body('TimeUtilsWebHook_2'))?['DayPrecision']",
                                    "publishedHourPrecision": "@Json(body('TimeUtilsWebHook_2'))?['HourPrecision']",
                                    "publishedMinutePrecision": "@Json(body('TimeUtilsWebHook_2'))?['MinutePrecision']",
                                    "publishedMonthPrecision": "@Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']",
                                    "publishedTimestamp": "@Json(body('TimeUtilsWebHook_2'))?['Timestamp']",
                                    "publishedWeekPrecision": "@Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']",
                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                    "sourceDomain": "@{body('UrlDomainWebHook')?['host']}",
                                    "sourceUrl": "@Json(body('UrlCleaner'))?['newUri']",
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}",
                                    "textLength": "@{body('HTMLStripperWebHook')['ScrubbedLength']}",
                                    "title": "@{triggerBody()?['name']}",
                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')?['entities']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                            }
                        },
                        "Key_Phrases": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/keyPhrases"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "20",
                                    "mkt": "en-US",
                                    "q": "@body('Get_row')?['NewsInput']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        },
                        "List_news_by_query_2": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "q": "\"Death Penalty\"",
                                    "safeSearch": "Moderate"
                                }
                            }
                        },
                        "MainImageExtractor": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/MainImageExtractor')]"
                                }
                            }
                        },
                        "TimeUtilsWebHook": {
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@utcnow()"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                }
                            }
                        },
                        "UrlDomainWebHook": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlDomainWebhook')]"
                                }
                            }
                        },
                        "UserDefinedEntitiesExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UserDefinedEntities')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            },
                            "sql_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/MAINFLOWAPP'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_MAINFLOWAPP_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "AbstractExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "query": "@{body('Get_row')?['Keywords']}",
                                            "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/AbstractExtractor')]"
                                        }
                                    }
                                },
                                "ArticleCleanerWebhook": {
                                    "runAfter": {
                                        "ExtractArticle": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@body('ExtractArticle')['bodyInHtml']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ASCIICleanerWebhook')]"
                                        }
                                    }
                                },
                                "Detect_Sentiment": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/sentiment"
                                    }
                                },
                                "ExtractArticle": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}",
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ArticleExtractor')]"
                                        }
                                    }
                                },
                                "For_each": {
                                    "foreach": "@body('Key_Phrases')?['keyPhrases']",
                                    "actions": {
                                        "Execute_stored_procedure": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                                    "category": "@items('For_each_2')?['category']",
                                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                                    "cleanedTextLength": "@body('HTMLStripperWebHook')['NoTagsLength']",
                                                    "docid": "@{Json(body('UrlCleaner'))?['triggerId']}",
                                                    "imageHeight": "@items('For_each_2')['image']['thumbnail']['height']",
                                                    "imageUrl": "@{Json(body('MainImageExtractor'))?['ImageUrl']}",
                                                    "imageWidth": "@items('For_each_2')['image']['thumbnail']['width']",
                                                    "ingestDayPrecision": "@{Json(body('TimeUtilsWebHook'))?['DayPrecision']}",
                                                    "ingestHourPrecision": "@{Json(body('TimeUtilsWebHook'))?['HourPrecision']}",
                                                    "ingestMinutePrecision": "@{Json(body('TimeUtilsWebHook'))?['MinutePrecision']}",
                                                    "ingestMonthPrecision": "@{Json(body('TimeUtilsWebHook'))?['MonthPrecision']}",
                                                    "ingestTimestamp": "@{Json(body('TimeUtilsWebHook'))?['Timestamp']}",
                                                    "ingestWeekPrecision": "@{Json(body('TimeUtilsWebHook'))?['WeekPrecision']}",
                                                    "keyPhraseJson": "@items('For_each')",
                                                    "publishedDayPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['DayPrecision']}",
                                                    "publishedHourPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['HourPrecision']}",
                                                    "publishedMinutePrecision": "@{Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']}",
                                                    "publishedMonthPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']}",
                                                    "publishedTimestamp": "@{Json(body('TimeUtilsWebHook_2'))?['Timestamp']}",
                                                    "publishedWeekPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']}",
                                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                                    "sourceDomain": "@{body('UrlDomainWebHook')['host']}",
                                                    "sourceUrl": "@{Json(body('UrlCleaner'))?['newUri']}",
                                                    "text": "@{body('HTMLstripperWebHook')['Scrubbed']}",
                                                    "textLength": "@body('HTMLstripperWebHook')['ScrubbedLength']",
                                                    "title": "@items('For_each_2')?['name']",
                                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')['entities']}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Detect_Sentiment": [
                                            "Succeeded"
                                        ],
                                        "Key_Phrases": [
                                            "Succeeded"
                                        ],
                                        "MainImageExtractor": [
                                            "Succeeded"
                                        ],
                                        "TimeUtilsWebhook": [
                                            "Succeeded"
                                        ],
                                        "TimeUtilsWebhook_2": [
                                            "Succeeded"
                                        ],
                                        "UrlDomainWebhook": [
                                            "Succeeded"
                                        ],
                                        "UserDefinedEntitiesExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTMLStripperWebhook": {
                                    "runAfter": {
                                        "ArticleCleanerWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('ArticleCleanerWebHook')['text']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/HTMLCleanerWebhook')]"
                                        }
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@{Json(body('UrlCleaner'))?['newUri']}"
                                    }
                                },
                                "Key_Phrases": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/keyPhrases"
                                    }
                                },
                                "MainImageExtractor": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/MainImageExtractor')]"
                                        }
                                    }
                                },
                                "TimeUtilsWebhook": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@utcNow()"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                },
                                "TimeUtilsWebhook_2": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@items('For_each_2')?['datePublished']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                },
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlCleaner')]"
                                        }
                                    }
                                },
                                "UrlDomainWebhook": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlDomainWebhook')]"
                                        }
                                    }
                                },
                                "UserDefinedEntitiesExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UserDefinedEntities')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "@body('Get_row')?['Keywords']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/mainflowappnewclone'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_mainflowappnewclone_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "AbstractExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "query": "@{body('Get_row')?['Keywords']}",
                                            "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/AbstractExtractor')]"
                                        }
                                    }
                                },
                                "ArticleCleanerWebhook": {
                                    "runAfter": {
                                        "ExtractArticle": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@body('ExtractArticle')['bodyInHtml']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ASCIICleanerWebhook')]"
                                        }
                                    }
                                },
                                "Detect_Sentiment": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/sentiment"
                                    }
                                },
                                "ExtractArticle": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}",
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ArticleExtractor')]"
                                        }
                                    }
                                },
                                "For_each": {
                                    "foreach": "@body('Key_Phrases')?['keyPhrases']",
                                    "actions": {
                                        "Execute_stored_procedure": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                                    "category": "@items('For_each_2')?['category']",
                                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                                    "cleanedTextLength": "@body('HTMLStripperWebHook')['NoTagsLength']",
                                                    "docid": "@{Json(body('UrlCleaner'))?['triggerId']}",
                                                    "imageHeight": "@items('For_each_2')['image']['thumbnail']['height']",
                                                    "imageUrl": "@{Json(body('MainImageExtractor'))?['ImageUrl']}",
                                                    "imageWidth": "@items('For_each_2')['image']['thumbnail']['width']",
                                                    "ingestDayPrecision": "@{Json(body('TimeUtilsWebHook'))?['DayPrecision']}",
                                                    "ingestHourPrecision": "@{Json(body('TimeUtilsWebHook'))?['HourPrecision']}",
                                                    "ingestMinutePrecision": "@{Json(body('TimeUtilsWebHook'))?['MinutePrecision']}",
                                                    "ingestMonthPrecision": "@{Json(body('TimeUtilsWebHook'))?['MonthPrecision']}",
                                                    "ingestTimestamp": "@{Json(body('TimeUtilsWebHook'))?['Timestamp']}",
                                                    "ingestWeekPrecision": "@{Json(body('TimeUtilsWebHook'))?['WeekPrecision']}",
                                                    "keyPhraseJson": "@items('For_each')",
                                                    "publishedDayPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['DayPrecision']}",
                                                    "publishedHourPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['HourPrecision']}",
                                                    "publishedMinutePrecision": "@{Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']}",
                                                    "publishedMonthPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']}",
                                                    "publishedTimestamp": "@{Json(body('TimeUtilsWebHook_2'))?['Timestamp']}",
                                                    "publishedWeekPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']}",
                                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                                    "sourceDomain": "@{body('UrlDomainWebHook')['host']}",
                                                    "sourceUrl": "@{Json(body('UrlCleaner'))?['newUri']}",
                                                    "text": "@{body('HTMLstripperWebHook')['Scrubbed']}",
                                                    "textLength": "@body('HTMLstripperWebHook')['ScrubbedLength']",
                                                    "title": "@items('For_each_2')?['name']",
                                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')['entities']}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Detect_Sentiment": [
                                            "Succeeded"
                                        ],
                                        "Key_Phrases": [
                                            "Succeeded"
                                        ],
                                        "MainImageExtractor": [
                                            "Succeeded"
                                        ],
                                        "TimeUtilsWebhook": [
                                            "Succeeded"
                                        ],
                                        "TimeUtilsWebhook_2": [
                                            "Succeeded"
                                        ],
                                        "UrlDomainWebhook": [
                                            "Succeeded"
                                        ],
                                        "UserDefinedEntitiesExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTMLStripperWebhook": {
                                    "runAfter": {
                                        "ArticleCleanerWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('ArticleCleanerWebHook')['text']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/HTMLCleanerWebhook')]"
                                        }
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@{Json(body('UrlCleaner'))?['newUri']}"
                                    }
                                },
                                "Key_Phrases": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/keyPhrases"
                                    }
                                },
                                "MainImageExtractor": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/MainImageExtractor')]"
                                        }
                                    }
                                },
                                "TimeUtilsWebhook": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@utcNow()"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                },
                                "TimeUtilsWebhook_2": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@items('For_each_2')?['datePublished']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                },
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlCleaner')]"
                                        }
                                    }
                                },
                                "UrlDomainWebhook": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlDomainWebhook')]"
                                        }
                                    }
                                },
                                "UserDefinedEntitiesExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UserDefinedEntities')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "@body('Get_row')?['Keywords']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/MAINFLOWClone'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_MAINFLOWClone_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "AbstractExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "query": "@{body('Get_row')?['Keywords']}",
                                            "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/AbstractExtractor')]"
                                        }
                                    }
                                },
                                "ArticleCleanerWebhook": {
                                    "runAfter": {
                                        "ExtractArticle": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@body('ExtractArticle')['bodyInHtml']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ASCIICleanerWebhook')]"
                                        }
                                    }
                                },
                                "Detect_Sentiment": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/sentiment"
                                    }
                                },
                                "ExtractArticle": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}",
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ArticleExtractor')]"
                                        }
                                    }
                                },
                                "For_each": {
                                    "foreach": "@body('Key_Phrases')?['keyPhrases']",
                                    "actions": {
                                        "Execute_stored_procedure": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                                    "category": "@items('For_each_2')?['category']",
                                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                                    "cleanedTextLength": "@body('HTMLStripperWebHook')['NoTagsLength']",
                                                    "docid": "@{Json(body('UrlCleaner'))?['triggerId']}",
                                                    "imageHeight": 3500,
                                                    "imageUrl": "@{Json(body('MainImageExtractor'))?['ImageUrl']}",
                                                    "imageWidth": 3500,
                                                    "ingestDayPrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestHourPrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestMinutePrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestMonthPrecision": "@items('For_each_2')?['datePublished']",
                                                    "ingestTimestamp": "@items('For_each_2')?['datePublished']",
                                                    "ingestWeekPrecision": "@items('For_each_2')?['datePublished']",
                                                    "keyPhraseJson": "@{body('Key_Phrases')?['keyPhrases']}",
                                                    "publishedDayPrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedHourPrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedMinutePrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedMonthPrecision": "@items('For_each_2')?['datePublished']",
                                                    "publishedTimestamp": "@items('For_each_2')?['datePublished']",
                                                    "publishedWeekPrecision": "@items('For_each_2')?['datePublished']",
                                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                                    "sourceDomain": "@{body('UrlDomainWebHook')['host']}",
                                                    "sourceUrl": "@{Json(body('UrlCleaner'))?['newUri']}",
                                                    "text": "@{body('HTMLstripperWebHook')['Scrubbed']}",
                                                    "textLength": "@body('HTMLstripperWebHook')['ScrubbedLength']",
                                                    "title": "@items('For_each_2')?['name']",
                                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')['entities']}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Detect_Sentiment": [
                                            "Succeeded"
                                        ],
                                        "Key_Phrases": [
                                            "Succeeded"
                                        ],
                                        "MainImageExtractor": [
                                            "Succeeded"
                                        ],
                                        "UrlDomainWebhook": [
                                            "Succeeded"
                                        ],
                                        "UserDefinedEntitiesExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "HTMLStripperWebhook": {
                                    "runAfter": {
                                        "ArticleCleanerWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('ArticleCleanerWebHook')['text']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/HTMLCleanerWebhook')]"
                                        }
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "UrlCleaner": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@{Json(body('UrlCleaner'))?['newUri']}"
                                    }
                                },
                                "Key_Phrases": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/keyPhrases"
                                    }
                                },
                                "MainImageExtractor": {
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "html": "@{body('HTTP')}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/MainImageExtractor')]"
                                        }
                                    }
                                },
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlCleaner')]"
                                        }
                                    }
                                },
                                "UrlDomainWebhook": {
                                    "runAfter": {
                                        "AbstractExtractor": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@Json(body('UrlCleaner'))?['newUri']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlDomainWebhook')]"
                                        }
                                    }
                                },
                                "UserDefinedEntitiesExtractor": {
                                    "runAfter": {
                                        "HTMLStripperWebhook": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UserDefinedEntities')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "2000",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "@body('Get_row')?['Keywords']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/notifierLogicApp'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_notifierLogicApp_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "value": "run"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "DeploymentId": {
                                    "runAfter": {
                                        "NotificationEmails": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "api": {
                                                "runtimeUrl": "https://logic-apis-westus.azure-apim.net/apim/sql"
                                            },
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[configuration]'))}/items",
                                        "queries": {
                                            "$filter": "configuration_subgroup eq 'Notifier' and name eq 'DeploymentId'",
                                            "$select": "name,value"
                                        }
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "TemplateName": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "deploymentId": "@body('DeploymentId')?['value']?[0]?['value']",
                                            "statuscode": "@body('DataPullStatus')?['value']?[0]?['value']",
                                            "templateName": "@body('TemplateName')?['value']?[0]?['value']",
                                            "to": "@body('NotificationEmails')?['value']?[0]?['value']"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "@{body('NotifierUrl')?['value']?[0]?['value']}"
                                    }
                                },
                                "NotificationEmails": {
                                    "runAfter": {
                                        "NotifierUrl": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "api": {
                                                "runtimeUrl": "https://logic-apis-westus.azure-apim.net/apim/sql"
                                            },
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[configuration]'))}/items",
                                        "queries": {
                                            "$filter": "configuration_subgroup eq 'Notifier' and name eq 'NotificationEmails'",
                                            "$select": "name,value"
                                        }
                                    }
                                },
                                "NotifierUrl": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "api": {
                                                "runtimeUrl": "https://logic-apis-westus.azure-apim.net/apim/sql"
                                            },
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[configuration]'))}/items",
                                        "queries": {
                                            "$filter": "configuration_subgroup eq 'Notifier' and name eq 'NotifierUrl'",
                                            "$select": "name, value"
                                        }
                                    }
                                },
                                "TemplateName": {
                                    "runAfter": {
                                        "DeploymentId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "api": {
                                                "runtimeUrl": "https://logic-apis-westus.azure-apim.net/apim/sql"
                                            },
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[configuration]'))}/items",
                                        "queries": {
                                            "$filter": "configuration_subgroup eq 'Notifier' and name eq 'TemplateName'",
                                            "$select": "name,value"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "DataPullStatus": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Delay": {
                                        "runAfter": {},
                                        "type": "Wait",
                                        "inputs": {
                                            "interval": {
                                                "count": 1,
                                                "unit": "Minute"
                                            }
                                        }
                                    },
                                    "HTTP_2": {
                                        "runAfter": {
                                            "Delay": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Http",
                                        "inputs": {
                                            "body": {
                                                "value": "run"
                                            },
                                            "headers": {
                                                "Content-Type": "Application/json"
                                            },
                                            "method": "POST",
                                            "uri": "https://prod-66.westus.logic.azure.com:443/workflows/5bcbff85412c4380a11f28644c045f3f/triggers/manual/paths/invoke?api-version=2016-06-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=8vItPPjPsIJ5M_GIHTU9AnqThpmP1uEfQcJ0OG-gbXE"
                                        }
                                    }
                                }
                            },
                            "expression": "@not(equals(body('DataPullStatus')?['value']?[0]?['value'], '-1'))",
                            "type": "If"
                        },
                        "DataPullStatus": {
                            "runAfter": {
                                "Execute_stored_procedure": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "api": {
                                        "runtimeUrl": "https://logic-apis-westus.azure-apim.net/apim/sql"
                                    },
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[configuration]'))}/items",
                                "queries": {
                                    "$filter": "configuration_subgroup eq 'Notifier' and name eq 'DataPullStatus'",
                                    "$select": "name,value"
                                }
                            }
                        },
                        "Execute_stored_procedure": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "api": {
                                        "runtimeUrl": "https://logic-apis-westus.azure-apim.net/apim/sql"
                                    },
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_get_pull_status]'))}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sqlNotifierConnection_name'))]",
                                "connectionName": "sqlNotifierConnection",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sqlNotifierConnection_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/oginAppMainNewsClone1'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_oginAppMainNewsClone1_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "On_new_news_article": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 2
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/trigger/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "\"Death Penalty\"",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "actions": {
                        "AbstractExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "query": "@{trigger()['inputs']['queries']['q']}",
                                    "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/AbstractExtractor')]"
                                }
                            }
                        },
                        "ArticleCleanerWebHook": {
                            "runAfter": {
                                "ExtractArticle": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@body('ExtractArticle')['bodyInHtml']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ASCIICleanerWebhook')]"
                                }
                            }
                        },
                        "Detect_Sentiment": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/sentiment"
                            }
                        },
                        "ExtractArticle": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}",
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ArticleExtractor')]"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('AbstractExtractor')?['Matches']",
                            "actions": {
                                "Insert_row": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "documentId": "@Json(body('UrlCleaner'))?['triggerId']",
                                            "searchterms": "@item()['match']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[documentsearchterms]'))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "InsertDocument": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlCleaner')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_3": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "TimeUtilsWebHook_2": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@triggerBody()?['datePublished']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "HTMLStripperWebHook": {
                            "runAfter": {
                                "ArticleCleanerWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('ArticleCleanerWebHook')['text']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/HTMLCleanerWebhook')]"
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@Json(body('UrlCleaner'))?['newUri']"
                            }
                        },
                        "InsertDocument": {
                            "runAfter": {
                                "Detect_Sentiment": [
                                    "Succeeded"
                                ],
                                "For_each_3": [
                                    "Succeeded"
                                ],
                                "Key_Phrases": [
                                    "Succeeded"
                                ],
                                "MainImageExtractor": [
                                    "Succeeded"
                                ],
                                "TimeUtilsWebHook": [
                                    "Succeeded"
                                ],
                                "UrlDomainWebHook": [
                                    "Succeeded"
                                ],
                                "UserDefinedEntitiesExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                    "category": "@{triggerBody()?['category']}",
                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                    "cleanedTextLength": "@{body('HTMLStripperWebHook')['NoTagsLength']}",
                                    "docid": "@Json(body('UrlCleaner'))?['triggerId']",
                                    "imageHeight": "@triggerBody()?['image']?['thumbnail']?['height']",
                                    "imageUrl": "@Json(body('MainImageExtractor'))?['ImageUrl']",
                                    "imageWidth": "@triggerBody()?['image']?['thumbnail']?['width']",
                                    "ingestDayPrecision": "@Json(body('TimeUtilsWebHook'))?['DayPrecision']",
                                    "ingestHourPrecision": "@Json(body('TimeUtilsWebHook'))?['HourPrecision']",
                                    "ingestMinutePrecision": "@Json(body('TimeUtilsWebHook'))?['MinutePrecision']",
                                    "ingestMonthPrecision": "@Json(body('TimeUtilsWebHook'))?['MonthPrecision']",
                                    "ingestTimestamp": "@Json(body('TimeUtilsWebHook'))?['Timestamp']",
                                    "ingestWeekPrecision": "@Json(body('TimeUtilsWebHook'))?['WeekPrecision']",
                                    "keyPhraseJson": "@{body('Key_Phrases')?['keyPhrases']}",
                                    "publishedDayPrecision": "@Json(body('TimeUtilsWebHook_2'))?['DayPrecision']",
                                    "publishedHourPrecision": "@Json(body('TimeUtilsWebHook_2'))?['HourPrecision']",
                                    "publishedMinutePrecision": "@Json(body('TimeUtilsWebHook_2'))?['MinutePrecision']",
                                    "publishedMonthPrecision": "@Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']",
                                    "publishedTimestamp": "@Json(body('TimeUtilsWebHook_2'))?['Timestamp']",
                                    "publishedWeekPrecision": "@Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']",
                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                    "sourceDomain": "@{body('UrlDomainWebHook')?['host']}",
                                    "sourceUrl": "@Json(body('UrlCleaner'))?['newUri']",
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}",
                                    "textLength": "@{body('HTMLStripperWebHook')['ScrubbedLength']}",
                                    "title": "@{triggerBody()?['name']}",
                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')?['entities']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                            }
                        },
                        "Key_Phrases": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/keyPhrases"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "20",
                                    "mkt": "en-US",
                                    "q": "@body('Get_row')?['NewsInput']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        },
                        "MainImageExtractor": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/MainImageExtractor')]"
                                }
                            }
                        },
                        "TimeUtilsWebHook": {
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@utcnow()"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                }
                            }
                        },
                        "UrlDomainWebHook": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlDomainWebhook')]"
                                }
                            }
                        },
                        "UserDefinedEntitiesExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UserDefinedEntities')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            },
                            "sql_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/TestLogic'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_TestLogic_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "AbstractExtractor": {
                            "runAfter": {
                                "HTMLStripperWebhook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "query": "@{trigger()['inputs']['queries']['q']}",
                                    "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/AbstractExtractor')]"
                                }
                            }
                        },
                        "ArticleCleanerWebhook": {
                            "runAfter": {
                                "ExtractArticle": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@body('ExtractArticle')['bodyInHtml']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ASCIICleanerWebhook')]"
                                }
                            }
                        },
                        "Detect_Sentiment": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/sentiment"
                            }
                        },
                        "ExtractArticle": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}",
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/ArticleExtractor')]"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "InsertDocument": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "abstract": "@{body('AbstractExtractor')['Snippet']}",
                                            "category": "@items('For_each')?['category']",
                                            "cleanedText": "@{body('HtmlStripperWebhook')['NoTags']}",
                                            "cleanedTextLength": "@body('HtmlStripperWebhook')['NoTagsLength']",
                                            "docid": "@{Json(body('UrlCleaner'))?['triggerId']}",
                                            "imageHeight": "@items('For_each')['image']['thumbnail']['height']",
                                            "imageUrl": "@{Json(body('MainImageExtractor'))?['ImageUrl']}",
                                            "imageWidth": "@items('For_each')['image']['thumbnail']['width']",
                                            "ingestDayPrecision": "@{Json(body('TimeUtilsWebHook'))?['DayPrecision']}",
                                            "ingestHourPrecision": "@{Json(body('TimeUtilsWebHook'))?['HourPrecision']}",
                                            "ingestMinutePrecision": "@{Json(body('TimeUtilsWebHook'))?['MinutePrecision']}",
                                            "ingestMonthPrecision": "@{Json(body('TimeUtilsWebHook'))?['MonthPrecision']}",
                                            "ingestTimestamp": "@{Json(body('TimeUtilsWebHook'))?['Timestamp']}",
                                            "ingestWeekPrecision": "@{Json(body('TimeUtilsWebHook'))?['WeekPrecision']}",
                                            "keyPhraseJson": "@{body('Key_Phrases')['keyPhrases']}",
                                            "publishedDayPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['DayPrecision']}",
                                            "publishedHourPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['HourPrecision']}",
                                            "publishedMinutePrecision": "@{Json(body('TimeUtilsWebHook_2'))?['MinutePrecision']}",
                                            "publishedMonthPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']}",
                                            "publishedTimestamp": "@{Json(body('TimeUtilsWebHook_2'))?['Timestamp']}",
                                            "publishedWeekPrecision": "@{Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']}",
                                            "sentimentScore": "@body('Detect_Sentiment')['score']",
                                            "sourceDomain": "@{body('UrlDomainWebhook')['host']}",
                                            "sourceUrl": "@{Json(body('UrlCleaner'))?['newUri']}",
                                            "text": "@{body('HTMLStripperWebhook')['Scrubbed']}",
                                            "textLength": "@body('HTMLStripperWebhook')['ScrubbedLength']",
                                            "title": "@items('For_each')?['name']",
                                            "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')['entities']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Detect_Sentiment": [
                                    "Succeeded"
                                ],
                                "For_each_2": [
                                    "Succeeded"
                                ],
                                "Key_Phrases": [
                                    "Succeeded"
                                ],
                                "MainImageExtractor": [
                                    "Succeeded"
                                ],
                                "TimeUtilsWebhook": [
                                    "Succeeded"
                                ],
                                "UrlDomainWebhook": [
                                    "Succeeded"
                                ],
                                "UserDefinedEntitiesExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "TimeUtilsWebhook_2": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@items('For_each_2')?['datePublished']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_3": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_3')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlCleaner')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_eachnew": {
                            "foreach": "@body('AbstractExtractor')['Matches']",
                            "actions": {
                                "Insert_row": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "documentId": "@{Json(body('UrlCleaner'))?['triggerId']}",
                                            "searchterms": "@{items('For_eachnew')['match']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[documentsearchterms]'))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('1'))}"
                            }
                        },
                        "HTMLStripperWebhook": {
                            "runAfter": {
                                "ArticleCleanerWebhook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('ArticleCleanerWebHook')['text']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/HTMLCleanerWebhook')]"
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "For_each_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@{Json(body('UrlCleaner'))?['newUri']}"
                            }
                        },
                        "Key_Phrases": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/keyPhrases"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "100",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "@body('Get_row')?['NewsInput']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        },
                        "MainImageExtractor": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/MainImageExtractor')]"
                                }
                            }
                        },
                        "TimeUtilsWebhook": {
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@utcNow()"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                }
                            }
                        },
                        "UrlDomainWebhook": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlDomainWebhook')]"
                                }
                            }
                        },
                        "UserDefinedEntitiesExtractor": {
                            "runAfter": {
                                "HTMLStripperWebhook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UserDefinedEntities')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/testlogicapps'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_testlogicapps_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "On_new_news_article": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/trigger/news/search",
                                "queries": {
                                    "count": "1",
                                    "mkt": "en-US",
                                    "offset": "0",
                                    "q": "\"Death Penalty\"",
                                    "safeSearch": "Moderate"
                                }
                            }
                        }
                    },
                    "actions": {
                        "AbstractExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "query": "@{trigger()['inputs']['queries']['q']}",
                                    "text": "@{body('HTMLStripperWebHook')['NoTags']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/AbstractExtractor')]"
                                }
                            }
                        },
                        "ArticleCleanerWebHook": {
                            "runAfter": {
                                "ExtractArticle": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@body('ExtractArticle')['bodyInHtml']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ASCIICleanerWebhook')]"
                                }
                            }
                        },
                        "Detect_Sentiment": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/sentiment"
                            }
                        },
                        "ExtractArticle": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}",
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/ArticleExtractor')]"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('AbstractExtractor')?['Matches']",
                            "actions": {
                                "Insert_row": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "documentId": "@Json(body('UrlCleaner'))?['triggerId']",
                                            "searchterms": "@item()['match']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[documentsearchterms]'))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "InsertDocument": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "UrlCleaner": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "url": "@{items('For_each_2')?['url']}"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/UrlCleaner')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_3": {
                            "foreach": "@body('List_news_by_query')",
                            "actions": {
                                "TimeUtilsWebHook_2": {
                                    "runAfter": {},
                                    "type": "Function",
                                    "inputs": {
                                        "body": {
                                            "date": "@items('For_each_3')?['datePublished']"
                                        },
                                        "function": {
                                            "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_row": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/tables/@{encodeURIComponent(encodeURIComponent('[bpst_news].[MySettings]'))}/items/@{encodeURIComponent(encodeURIComponent('MySettings_ID'))}"
                            }
                        },
                        "HTMLStripperWebHook": {
                            "runAfter": {
                                "ArticleCleanerWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('ArticleCleanerWebHook')['text']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/HTMLCleanerWebhook')]"
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@Json(body('UrlCleaner'))?['newUri']"
                            }
                        },
                        "InsertDocument": {
                            "runAfter": {
                                "Detect_Sentiment": [
                                    "Succeeded"
                                ],
                                "For_each_3": [
                                    "Succeeded"
                                ],
                                "Key_Phrases": [
                                    "Succeeded"
                                ],
                                "MainImageExtractor": [
                                    "Succeeded"
                                ],
                                "TimeUtilsWebHook": [
                                    "Succeeded"
                                ],
                                "UrlDomainWebHook": [
                                    "Succeeded"
                                ],
                                "UserDefinedEntitiesExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "abstract": "@{body('AbstractExtractor')?['Snippet']}",
                                    "category": "@{triggerBody()?['category']}",
                                    "cleanedText": "@{body('HTMLStripperWebHook')['NoTags']}",
                                    "cleanedTextLength": "@{body('HTMLStripperWebHook')['NoTagsLength']}",
                                    "docid": "@Json(body('UrlCleaner'))?['triggerId']",
                                    "imageHeight": "@triggerBody()?['image']?['thumbnail']?['height']",
                                    "imageUrl": "@Json(body('MainImageExtractor'))?['ImageUrl']",
                                    "imageWidth": "@triggerBody()?['image']?['thumbnail']?['width']",
                                    "ingestDayPrecision": "@Json(body('TimeUtilsWebHook'))?['DayPrecision']",
                                    "ingestHourPrecision": "@Json(body('TimeUtilsWebHook'))?['HourPrecision']",
                                    "ingestMinutePrecision": "@Json(body('TimeUtilsWebHook'))?['MinutePrecision']",
                                    "ingestMonthPrecision": "@Json(body('TimeUtilsWebHook'))?['MonthPrecision']",
                                    "ingestTimestamp": "@Json(body('TimeUtilsWebHook'))?['Timestamp']",
                                    "ingestWeekPrecision": "@Json(body('TimeUtilsWebHook'))?['WeekPrecision']",
                                    "keyPhraseJson": "@{body('Key_Phrases')?['keyPhrases']}",
                                    "publishedDayPrecision": "@Json(body('TimeUtilsWebHook_2'))?['DayPrecision']",
                                    "publishedHourPrecision": "@Json(body('TimeUtilsWebHook_2'))?['HourPrecision']",
                                    "publishedMinutePrecision": "@Json(body('TimeUtilsWebHook_2'))?['MinutePrecision']",
                                    "publishedMonthPrecision": "@Json(body('TimeUtilsWebHook_2'))?['MonthPrecision']",
                                    "publishedTimestamp": "@Json(body('TimeUtilsWebHook_2'))?['Timestamp']",
                                    "publishedWeekPrecision": "@Json(body('TimeUtilsWebHook_2'))?['WeekPrecision']",
                                    "sentimentScore": "@body('Detect_Sentiment')?['score']",
                                    "sourceDomain": "@{body('UrlDomainWebHook')?['host']}",
                                    "sourceUrl": "@Json(body('UrlCleaner'))?['newUri']",
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}",
                                    "textLength": "@{body('HTMLStripperWebHook')['ScrubbedLength']}",
                                    "title": "@{triggerBody()?['name']}",
                                    "userDefinedEntities": "@{body('UserDefinedEntitiesExtractor')?['entities']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/procedures/@{encodeURIComponent(encodeURIComponent('[bpst_news].[sp_write_document]'))}"
                            }
                        },
                        "Key_Phrases": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "text": "@{substring(body('HTMLStripperWebHook')['NoTags'], 0, min(length(body('HTMLStripperWebHook')['NoTags']),5000))}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/keyPhrases"
                            }
                        },
                        "List_news_by_query": {
                            "runAfter": {
                                "Get_row": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['bingsearch']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/news/search",
                                "queries": {
                                    "count": "100",
                                    "mkt": "en-US",
                                    "q": "@body('Get_row')?['NewsInput']",
                                    "safeSearch": "Moderate"
                                }
                            }
                        },
                        "MainImageExtractor": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "html": "@{body('HTTP')}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/MainImageExtractor')]"
                                }
                            }
                        },
                        "TimeUtilsWebHook": {
                            "runAfter": {
                                "List_news_by_query": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@utcnow()"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/TimeUtilsWebhook')]"
                                }
                            }
                        },
                        "UrlDomainWebHook": {
                            "runAfter": {
                                "AbstractExtractor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "url": "@Json(body('UrlCleaner'))?['newUri']"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UrlDomainWebhook')]"
                                }
                            }
                        },
                        "UserDefinedEntitiesExtractor": {
                            "runAfter": {
                                "HTMLStripperWebHook": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "text": "@{body('HTMLStripperWebHook')['Scrubbed']}"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/Functions/UserDefinedEntities')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "bingsearch": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                                "connectionName": "bingsearch",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/bingsearch"
                            },
                            "cognitiveservicestextanalytics": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                                "connectionName": "cognitiveservicestextanalytics",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/cognitiveservicestextanalytics"
                            },
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            },
                            "sql_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]",
                                "connectionName": "sql-1",
                                "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_bingsearch_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicestextanalytics_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_1_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Logic/workflows/TimeTuil'.",
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_TimeTuil_name')]",
            "apiVersion": "2017-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "TimeUtilsWebhook": {
                            "runAfter": {},
                            "type": "Function",
                            "inputs": {
                                "body": {
                                    "date": "@utcNow()"
                                },
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name')), '/functions/TimeUtilsWebhook')]"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.MachineLearning/commitmentPlans/commitmentplan'.",
            "type": "Microsoft.MachineLearning/commitmentPlans",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "name": "[parameters('commitmentPlans_commitmentplan_name')]",
            "apiVersion": "2016-05-01-preview",
            "location": "South Central US",
            "tags": {},
            "scale": null,
            "properties": {
                "chargeForOverage": true,
                "chargeForPlan": true,
                "creationDate": "2018-11-02T18:52:02.2358417Z",
                "includedQuantities": {
                    "machineLearningWebServiceComputeHours": {
                        "allowance": 25,
                        "amount": 0,
                        "includedQuantityMeter": "29187de1-b4a1-4503-a6f6-078271b3fc9d",
                        "overageMeter": "842f92f7-a46b-4522-ac62-8134271dc591"
                    },
                    "machineLearningWebServiceTransactions": {
                        "allowance": 100000,
                        "amount": 98.34599999999999,
                        "includedQuantityMeter": "303743b6-4cd0-44df-8ec2-a93c8f14943b",
                        "overageMeter": "c906e161-98b8-41b1-81e2-b59e0b263740"
                    }
                },
                "maxAssociationLimit": 10000,
                "maxCapacityLimit": 10,
                "minCapacityLimit": 1,
                "planMeter": "4a5a4b83-6216-47c5-b3db-fe430fa6e2c3",
                "refillFrequencyInDays": 30,
                "suspendPlanOnOverage": false
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.MachineLearning/webServices/EntitiesWebService06af1xdwag'.",
            "type": "Microsoft.MachineLearning/webServices",
            "name": "[parameters('webServices_EntitiesWebService06af1xdwag_name')]",
            "apiVersion": "2016-05-01-preview",
            "location": "South Central US",
            "tags": {},
            "scale": null,
            "properties": {
                "title": "entity12",
                "description": "Solution Template",
                "readOnly": false,
                "realtimeConfiguration": {
                    "maxConcurrentCalls": 20
                },
                "diagnostics": {
                    "level": "None"
                },
                "storageAccount": {
                    "name": "storage06af1xdwag"
                },
                "packageType": "Graph",
                "exposeSampleData": false
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.MachineLearning/webServices/TopicsImagesWebService06af1xdwag'.",
            "type": "Microsoft.MachineLearning/webServices",
            "name": "[parameters('webServices_TopicsImagesWebService06af1xdwag_name')]",
            "apiVersion": "2016-05-01-preview",
            "location": "South Central US",
            "tags": {},
            "scale": null,
            "properties": {
                "title": "TopicImages",
                "description": "Solution Template",
                "readOnly": false,
                "realtimeConfiguration": {
                    "maxConcurrentCalls": 20
                },
                "diagnostics": {
                    "level": "None"
                },
                "storageAccount": {
                    "name": "storage06af1xdwag"
                },
                "packageType": "Graph",
                "exposeSampleData": false
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.MachineLearning/webServices/TopicsWebService06af1xdwag'.",
            "type": "Microsoft.MachineLearning/webServices",
            "name": "[parameters('webServices_TopicsWebService06af1xdwag_name')]",
            "apiVersion": "2016-05-01-preview",
            "location": "South Central US",
            "tags": {},
            "scale": null,
            "properties": {
                "title": "TopicsDeployed",
                "readOnly": false,
                "realtimeConfiguration": {
                    "maxConcurrentCalls": 20
                },
                "diagnostics": {
                    "level": "None"
                },
                "storageAccount": {
                    "name": "storage06af1xdwag"
                },
                "packageType": "Graph",
                "exposeSampleData": false
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourcegroups/amnestyrg/providers/microsoft.operationalinsights/workspaces/timeutillogs'.",
            "type": "microsoft.operationalinsights/workspaces",
            "name": "[parameters('workspaces_timeutillogs_name')]",
            "apiVersion": "2015-11-01-preview",
            "location": "canadacentral",
            "scale": null,
            "properties": {
                "source": "Azure",
                "customerId": "f62da3ae-fabb-4e8f-909f-58c962d84dd4",
                "portalUrl": "[concat('https://ccan.mms.microsoft.com/Account?tenant=949f8542-e0d3-4a2e-b754-6b2027932785&resource=%2fsubscriptions%2f6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c%2fresourcegroups%2famnestyrg%2fproviders%2fmicrosoft.operationalinsights%2fworkspaces%2f', parameters('workspaces_timeutillogs_name'))]",
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms'.",
            "type": "Microsoft.Sql/servers",
            "kind": "v12.0",
            "name": "[parameters('servers_amnestyms_name')]",
            "apiVersion": "2015-05-01-preview",
            "location": "eastus",
            "scale": null,
            "properties": {
                "administratorLogin": "adminuser",
                "version": "12.0"
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Storage/storageAccounts/storage06af1xdwag'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_storage06af1xdwag_name')]",
            "apiVersion": "2018-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Storage/storageAccounts/solutiontemplatezrdkwyq4'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_solutiontemplatezrdkwyq4_name')]",
            "apiVersion": "2018-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Storage/storageAccounts/solutiontemplateuyuukl1k'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_solutiontemplateuyuukl1k_name')]",
            "apiVersion": "2018-07-01",
            "location": "westus",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Storage/storageAccounts/refugeebota9d9'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_refugeebota9d9_name')]",
            "apiVersion": "2018-07-01",
            "location": "southeastasia",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Storage/storageAccounts/refugeechatbot9697'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_refugeechatbot9697_name')]",
            "apiVersion": "2018-07-01",
            "location": "southeastasia",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/connections/azureml'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_azureml_name')]",
            "apiVersion": "2016-06-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "displayName": "[parameters('connections_azureml_name')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/', parameters('connections_azureml_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/connections/bingsearch'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_bingsearch_name')]",
            "apiVersion": "2016-06-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "displayName": "[parameters('connections_bingsearch_name')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/', parameters('connections_bingsearch_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/connections/cognitiveservicestextanalytics'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_cognitiveservicestextanalytics_name')]",
            "apiVersion": "2016-06-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "displayName": "TextAnalytics",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/', parameters('connections_cognitiveservicestextanalytics_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/connections/sql-1'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_sql_1_name')]",
            "apiVersion": "2016-06-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "displayName": "amnestyconn",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/connections/sqlNotifierConnection'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_sqlNotifierConnection_name')]",
            "apiVersion": "2016-06-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "displayName": "[parameters('connections_sqlNotifierConnection_name')]",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/sql"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/connections/sql'.",
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_sql_name')]",
            "apiVersion": "2016-06-01",
            "location": "westus",
            "scale": null,
            "properties": {
                "displayName": "[concat(parameters('connections_sql_name'),'SQLConnector')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/providers/Microsoft.Web/locations/westus/managedApis/', parameters('connections_sql_name'))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/serverfarms/WestUSPlan'.",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "name": "[parameters('serverfarms_WestUSPlan_name')]",
            "apiVersion": "2016-09-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "name": "[parameters('serverfarms_WestUSPlan_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/serverfarms/ServicePlan475a59de-8f9b'.",
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "app",
            "name": "[parameters('serverfarms_ServicePlan475a59de_8f9b_name')]",
            "apiVersion": "2016-09-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "name": "[parameters('serverfarms_ServicePlan475a59de_8f9b_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/function06af1xdwag'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_function06af1xdwag_name')]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_function06af1xdwag_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_function06af1xdwag_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_WestUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_WestUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/functiondd32oc8iak'.",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('sites_functiondd32oc8iak_name')]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_functiondd32oc8iak_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_functiondd32oc8iak_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_WestUSPlan_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_WestUSPlan_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeebot'.",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[parameters('sites_refugeebot_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_refugeebot_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_refugeebot_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeechatbot'.",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[parameters('sites_refugeechatbot_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_refugeechatbot_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_refugeechatbot_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/AmnestyWebApp'.",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[parameters('sites_AmnestyWebApp_name')]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_AmnestyWebApp_name'),'amnestywebapp.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_AmnestyWebApp_name'),'amnestywebapp.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|AllEvents'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|AllEvents_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All Events",
                "Category": "Log Management",
                "Query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|EventsWithStartedinEventID'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|EventsWithStartedinEventID_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of Events containing the word \"started\" grouped by EventID",
                "Category": "Log Management",
                "Query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|EventsByEventLog'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|EventsByEventLog_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of Events grouped by Event Log",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|EventsByEventSource'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|EventsByEventSource_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of Events grouped by Event Source",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|EventsByEventsID'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|EventsByEventsID_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of Events grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|WarningEvents'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|WarningEvents_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All Events with level \"Warning\"",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|CountOfWarningEvents'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfWarningEvents_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|NoOfConnectionsToOMSDKService'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|NoOfConnectionsToOMSDKService_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "How many connections to Operations Manager's SDK service by day",
                "Category": "Log Management",
                "Query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|EventsInOMBetween2000to3000'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|EventsInOMBetween2000to3000_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|ServerRestartTime'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|ServerRestartTime_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "When did my servers initiate restart?",
                "Category": "Log Management",
                "Query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChanged'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChanged_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Windows Firewall Policy settings have changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChangedByMachines'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|WindowsFireawallPolicySettingsChangedByMachines_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|ListAllIISLogEntries'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|ListAllIISLogEntries_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All IIS Log Entries",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|DisplayBreakdownRespondCodes'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|DisplayBreakdownRespondCodes_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Shows breakdown of response codes",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|FindMaximumTimeTakenForEachPage'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|FindMaximumTimeTakenForEachPage_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Find the maximum time taken for each page",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|Show404PagesList'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|Show404PagesList_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Shows which pages people are getting a 404 for",
                "Category": "Log Management",
                "Query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeHTTPMethod'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeHTTPMethod_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Average HTTP Request time by HTTP Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|ShowServersThrowingInternalServerError'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|ShowServersThrowingInternalServerError_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Shows servers that are throwing internal server error",
                "Category": "Log Management",
                "Query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPRequestMethod'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPRequestMethod_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP Request Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPUserAgent'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesHTTPUserAgent_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP User Agent",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesClientIPAddress'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|CountIISLogEntriesClientIPAddress_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|IISLogEntriesForClientIP'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|IISLogEntriesForClientIP_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "Category": "Log Management",
                "Query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLRequestedByClient'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLRequestedByClient_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByHostRequestedByClient'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByHostRequestedByClient_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Host requested by client",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLForHost'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|CountOfIISLogEntriesByURLForHost_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "Category": "Log Management",
                "Query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|TotalBytesSentByClientIPAddress'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesSentByClientIPAddress_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Total Bytes sent by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachAzureRoleInstance'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachAzureRoleInstance_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Total Bytes received by each Azure Role Instance",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachIISComputer'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesReceivedByEachIISComputer_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Total Bytes received by each IIS Computer",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByClientIPAddress'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|TotalBytesRespondedToClientsByClientIPAddress_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeByClientIPAddress'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|AverageHTTPRequestTimeByClientIPAddress_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Average HTTP Request time by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|AllSyslog'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslog_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All Syslogs",
                "Category": "Log Management",
                "Query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|AllSyslogsWithErrors'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslogsWithErrors_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All Syslog Records with Errors",
                "Category": "Log Management",
                "Query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|AllSyslogByFacility'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslogByFacility_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All Syslog Records grouped by Facility",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_LogManagement|AllSyslogByProcessName'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_LogManagement|AllSyslogByProcessName_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All Syslog Records grouped by ProcessName",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_General|dataPointsPerManagementGroup'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_General|dataPointsPerManagementGroup_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Which Management Group is generating the most data points?",
                "Category": "General Exploration",
                "Query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_General|dataTypeDistribution'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_General|dataTypeDistribution_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Distribution of data Types",
                "Category": "General Exploration",
                "Query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_General|AlphabeticallySortedComputers'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_General|AlphabeticallySortedComputers_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "All Computers with their most recent data",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: 'subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.OperationalInsights/workspaces/timeutillogs/savedSearches/LogManagement(timeutillogs)_General|StaleComputers'.",
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "name": "[concat(parameters('workspaces_timeutillogs_name'), '/', parameters('savedSearches_LogManagement(timeutillogs)_General|StaleComputers_name'))]",
            "apiVersion": "2015-03-20",
            "scale": null,
            "properties": {
                "DisplayName": "Stale Computers (data older than 24 hours)",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('advisors_CreateIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('advisors_DropIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('advisors_DbParameterization_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/advisors/DefragmentIndex'.",
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('advisors_DefragmentIndex_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('advisors_ForceLastGoodPlan_name'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('auditingPolicies_Default_name'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestyms",
                "auditLogsTableName": "Amnestyms",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New'.",
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "S2",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "eastus",
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB'.",
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "S2",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "eastus",
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB'.",
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "S2",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "eastus",
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews'.",
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "S1",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "eastus",
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp'.",
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "S2",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "eastus",
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB'.",
            "type": "Microsoft.Sql/servers/databases",
            "sku": {
                "name": "S2",
                "tier": "Standard"
            },
            "kind": "v12.0,user",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'))]",
            "apiVersion": "2017-03-01-preview",
            "location": "eastus",
            "scale": null,
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 268435456000,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/firewallRules/AllowAzureServices'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('firewallRules_AllowAzureServices_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/firewallRules/pleasechangeme'.",
            "type": "Microsoft.Sql/servers/firewallRules",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('firewallRules_pleasechangeme_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/encryptionProtector/current'.",
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('encryptionProtector_current_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/keys/ServiceManaged'.",
            "type": "Microsoft.Sql/servers/keys",
            "kind": "servicemanaged",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('keys_ServiceManaged_name'))]",
            "apiVersion": "2015-05-01-preview",
            "scale": null,
            "properties": {
                "serverKeyType": "[parameters('keys_ServiceManaged_name')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('advisors_CreateIndex_name_3'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('advisors_DropIndex_name_3'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('advisors_DbParameterization_name_3'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/advisors/DefragmentIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('advisors_DefragmentIndex_name_3'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('advisors_ForceLastGoodPlan_name_3'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('auditingPolicies_Default_name_4'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestymsAmnestynew",
                "auditLogsTableName": "AmnestymsAmnestynew",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('geoBackupPolicies_Default_name_3'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_New/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_New_name'), '/', parameters('transparentDataEncryption_current_name_3'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_New_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('advisors_CreateIndex_name_6'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('advisors_DropIndex_name_6'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('advisors_DbParameterization_name_6'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/advisors/DefragmentIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('advisors_DefragmentIndex_name_6'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('advisors_ForceLastGoodPlan_name_6'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('auditingPolicies_Default_name_7'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestymsAmnestyproductionbac",
                "auditLogsTableName": "AmnestymsAmnestyproductionbac",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('geoBackupPolicies_Default_name_6'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_ProductionBackupDB/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_ProductionBackupDB_name'), '/', parameters('transparentDataEncryption_current_name_6'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_ProductionBackupDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('advisors_CreateIndex_name_5'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('advisors_DropIndex_name_5'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('advisors_DbParameterization_name_5'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/advisors/DefragmentIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('advisors_DefragmentIndex_name_5'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('advisors_ForceLastGoodPlan_name_5'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('auditingPolicies_Default_name_6'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestymsAmnestystagingdb",
                "auditLogsTableName": "AmnestymsAmnestystagingdb",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('geoBackupPolicies_Default_name_5'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/Amnesty_StagingDB/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_Amnesty_StagingDB_name'), '/', parameters('transparentDataEncryption_current_name_5'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_Amnesty_StagingDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('advisors_CreateIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('advisors_DropIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('advisors_DbParameterization_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/advisors/DefragmentIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('advisors_DefragmentIndex_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('advisors_ForceLastGoodPlan_name_1'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('auditingPolicies_Default_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestymsBingnews",
                "auditLogsTableName": "AmnestymsBingnews",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('geoBackupPolicies_Default_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/bingNews/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_bingNews_name'), '/', parameters('transparentDataEncryption_current_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_bingNews_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/master/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_master_name'), '/', parameters('auditingPolicies_Default_name_1'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestymsMaster",
                "auditLogsTableName": "AmnestymsMaster",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/master/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_master_name'), '/', parameters('geoBackupPolicies_Default_name'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/master/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_master_name'), '/', parameters('transparentDataEncryption_current_name'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "status": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('advisors_CreateIndex_name_4'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('advisors_DropIndex_name_4'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('advisors_DbParameterization_name_4'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/advisors/DefragmentIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('advisors_DefragmentIndex_name_4'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('advisors_ForceLastGoodPlan_name_4'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('auditingPolicies_Default_name_5'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestymsRefugeecamp",
                "auditLogsTableName": "AmnestymsRefugeecamp",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('geoBackupPolicies_Default_name_4'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/refugeecamp/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_refugeecamp_name'), '/', parameters('transparentDataEncryption_current_name_4'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_refugeecamp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/advisors/CreateIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('advisors_CreateIndex_name_2'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/advisors/DropIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('advisors_DropIndex_name_2'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/advisors/DbParameterization'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('advisors_DbParameterization_name_2'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/advisors/DefragmentIndex'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('advisors_DefragmentIndex_name_2'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/advisors/ForceLastGoodPlan'.",
            "type": "Microsoft.Sql/servers/databases/advisors",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('advisors_ForceLastGoodPlan_name_2'))]",
            "apiVersion": "2014-04-01",
            "scale": null,
            "properties": {
                "autoExecuteValue": "Disabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/auditingPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('auditingPolicies_Default_name_3'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "auditingState": "New",
                "eventTypesToAudit": "PlainSQL_Success,PlainSQL_Failure,ParameterizedSQL_Success,ParameterizedSQL_Failure,StoredProcedure_Success,StoredProcedure_Failure,Login_Success,Login_Failure,TransactionManagement_Success,TransactionManagement_Failure",
                "storageAccountName": null,
                "storageAccountKey": null,
                "storageAccountSecondaryKey": null,
                "storageTableEndpoint": null,
                "storageAccountResourceGroupName": null,
                "storageAccountSubscriptionId": null,
                "useServerDefault": "Enabled",
                "fullAuditLogsTableName": "SQLDBAuditLogsAmnestymsSurveydb",
                "auditLogsTableName": "AmnestymsSurveydb",
                "retentionDays": "0"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/geoBackupPolicies/Default'.",
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('geoBackupPolicies_Default_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Sql/servers/amnestyms/databases/SurveyDB/transparentDataEncryption/current'.",
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "name": "[concat(parameters('servers_amnestyms_name'), '/', parameters('databases_SurveyDB_name'), '/', parameters('transparentDataEncryption_current_name_2'))]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "scale": null,
            "properties": {
                "status": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_amnestyms_name'))]",
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_amnestyms_name'), parameters('databases_SurveyDB_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/function06af1xdwag/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_function06af1xdwag_name'), '/', parameters('config_web_name_3'))]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "windowsFxVersion": null,
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$function06af1xdwag",
                "publishingPassword": null,
                "appSettings": null,
                "azureStorageAccounts": {},
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "ExternalGit",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "xManagedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourcegroups/AmnestyRG/providers/Microsoft.Web/sites/function06af1xdwag/deployments/9ccddde5370bcac53840878abbaf65ce7ed8f365'.",
            "type": "Microsoft.Web/sites/deployments",
            "name": "[concat(parameters('sites_function06af1xdwag_name'), '/', parameters('deployments_9ccddde5370bcac53840878abbaf65ce7ed8f365_name'))]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "id": "[parameters('deployments_9ccddde5370bcac53840878abbaf65ce7ed8f365_name')]",
                "status": 4,
                "author_email": "cdoroftei@users.noreply.github.com",
                "author": "Catalin Doroftei",
                "deployer": "GitHub",
                "message": "Update run.csx",
                "start_time": "2018-11-02T18:49:35.4995705Z",
                "end_time": "2018-11-02T18:50:30.4148295Z",
                "active": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/function06af1xdwag/hostNameBindings/function06af1xdwag.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_function06af1xdwag_name'), '/', parameters('hostNameBindings_function06af1xdwag.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "siteName": "function06af1xdwag",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function06af1xdwag_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/functiondd32oc8iak/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_functiondd32oc8iak_name'), '/', parameters('config_web_name_4'))]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "windowsFxVersion": null,
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$functiondd32oc8iak",
                "publishingPassword": null,
                "appSettings": null,
                "azureStorageAccounts": {},
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "ExternalGit",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "xManagedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_functiondd32oc8iak_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourcegroups/AmnestyRG/providers/Microsoft.Web/sites/functiondd32oc8iak/deployments/9ccddde5370bcac53840878abbaf65ce7ed8f365'.",
            "type": "Microsoft.Web/sites/deployments",
            "name": "[concat(parameters('sites_functiondd32oc8iak_name'), '/', parameters('deployments_9ccddde5370bcac53840878abbaf65ce7ed8f365_name_1'))]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "id": "[parameters('deployments_9ccddde5370bcac53840878abbaf65ce7ed8f365_name_1')]",
                "status": 4,
                "author_email": "cdoroftei@users.noreply.github.com",
                "author": "Catalin Doroftei",
                "deployer": "GitHub",
                "message": "Update run.csx",
                "start_time": "2018-11-02T18:41:51.4991167Z",
                "end_time": "2018-11-02T18:42:09.6757368Z",
                "active": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_functiondd32oc8iak_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/functiondd32oc8iak/hostNameBindings/functiondd32oc8iak.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_functiondd32oc8iak_name'), '/', parameters('hostNameBindings_functiondd32oc8iak.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "West US",
            "scale": null,
            "properties": {
                "siteName": "functiondd32oc8iak",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_functiondd32oc8iak_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeebot/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_refugeebot_name'), '/', parameters('config_web_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "windowsFxVersion": null,
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$refugeebot",
                "publishingPassword": null,
                "appSettings": null,
                "azureStorageAccounts": {},
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://botservice.hosting.portal.azure.net",
                        "https://hosting.onecloud.azure-test.net/"
                    ],
                    "supportCredentials": false
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "xManagedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_refugeebot_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeebot/hostNameBindings/refugeebot.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_refugeebot_name'), '/', parameters('hostNameBindings_refugeebot.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "refugeebot",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_refugeebot_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeechatbot/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_refugeechatbot_name'), '/', parameters('config_web_name_2'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "windowsFxVersion": null,
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$refugeechatbot",
                "publishingPassword": null,
                "appSettings": null,
                "azureStorageAccounts": {},
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": {
                    "allowedOrigins": [
                        "https://botservice.hosting.portal.azure.net",
                        "https://hosting.onecloud.azure-test.net/"
                    ],
                    "supportCredentials": false
                },
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "xManagedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_refugeechatbot_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/refugeechatbot/hostNameBindings/refugeechatbot.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_refugeechatbot_name'), '/', parameters('hostNameBindings_refugeechatbot.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "refugeechatbot",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_refugeechatbot_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/AmnestyWebApp/config/web'.",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_AmnestyWebApp_name'), '/', parameters('config_web_name_1'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "windowsFxVersion": null,
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": null,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$AmnestyWebApp')]",
                "publishingPassword": null,
                "appSettings": null,
                "azureStorageAccounts": {},
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": null,
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "xManagedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_AmnestyWebApp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/AmnestyWebApp/hostNameBindings/amnestywebapp.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "name": "[concat(parameters('sites_AmnestyWebApp_name'), '/', parameters('hostNameBindings_amnestywebapp.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "AmnestyWebApp",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_AmnestyWebApp_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/AmnestyWebApp/slots/Amnesty'.",
            "type": "Microsoft.Web/sites/slots",
            "kind": "app",
            "name": "[concat(parameters('sites_AmnestyWebApp_name'), '/', parameters('slots_Amnesty_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('slots_Amnesty_name'),'amnestywebapp-amnesty.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('slots_Amnesty_name'),'amnestywebapp-amnesty.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]",
                "reserved": false,
                "siteConfig": null,
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_AmnestyWebApp_name'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ServicePlan475a59de_8f9b_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/AmnestyWebApp/slots/Amnesty/config/web'.",
            "type": "Microsoft.Web/sites/slots/config",
            "name": "[concat(parameters('sites_AmnestyWebApp_name'), '/', parameters('slots_Amnesty_name'), '/', parameters('config_web_name_5'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "pythonVersion": "",
                "nodeVersion": "",
                "linuxFxVersion": "",
                "windowsFxVersion": null,
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2017",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[concat('$AmnestyWebApp__Amnesty')]",
                "publishingPassword": null,
                "appSettings": null,
                "azureStorageAccounts": {},
                "metadata": null,
                "connectionStrings": null,
                "machineKey": null,
                "handlerMappings": null,
                "documentRoot": null,
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "javaVersion": null,
                "javaContainer": null,
                "javaContainerVersion": null,
                "appCommandLine": "",
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false,
                        "virtualDirectories": null
                    }
                ],
                "winAuthAdminState": 0,
                "winAuthTenantState": 0,
                "customAppPoolIdentityAdminState": false,
                "customAppPoolIdentityTenantState": false,
                "runtimeADUser": null,
                "runtimeADUserPassword": null,
                "loadBalancing": "LeastRequests",
                "routingRules": [],
                "experiments": {
                    "rampUpRules": []
                },
                "limits": null,
                "autoHealEnabled": false,
                "autoHealRules": null,
                "tracingOptions": null,
                "vnetName": "",
                "siteAuthEnabled": false,
                "siteAuthSettings": {
                    "enabled": null,
                    "unauthenticatedClientAction": null,
                    "tokenStoreEnabled": null,
                    "allowedExternalRedirectUrls": null,
                    "defaultProvider": null,
                    "clientId": null,
                    "clientSecret": null,
                    "clientSecretCertificateThumbprint": null,
                    "issuer": null,
                    "allowedAudiences": null,
                    "additionalLoginParams": null,
                    "isAadAutoProvisioned": false,
                    "googleClientId": null,
                    "googleClientSecret": null,
                    "googleOAuthScopes": null,
                    "facebookAppId": null,
                    "facebookAppSecret": null,
                    "facebookOAuthScopes": null,
                    "twitterConsumerKey": null,
                    "twitterConsumerSecret": null,
                    "microsoftAccountClientId": null,
                    "microsoftAccountClientSecret": null,
                    "microsoftAccountOAuthScopes": null
                },
                "cors": null,
                "push": null,
                "apiDefinition": null,
                "autoSwapSlotName": null,
                "localMySqlEnabled": false,
                "managedServiceIdentityId": null,
                "xManagedServiceIdentityId": null,
                "ipSecurityRestrictions": null,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_AmnestyWebApp_name'))]",
                "[resourceId('Microsoft.Web/sites/slots', parameters('sites_AmnestyWebApp_name'), parameters('slots_Amnesty_name'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/6efc9ada-f2b2-472d-9d8e-fb0ab1e29d0c/resourceGroups/AmnestyRG/providers/Microsoft.Web/sites/AmnestyWebApp/slots/Amnesty/hostNameBindings/amnestywebapp-amnesty.azurewebsites.net'.",
            "type": "Microsoft.Web/sites/slots/hostNameBindings",
            "name": "[concat(parameters('sites_AmnestyWebApp_name'), '/', parameters('slots_Amnesty_name'), '/', parameters('hostNameBindings_amnestywebapp_amnesty.azurewebsites.net_name'))]",
            "apiVersion": "2016-08-01",
            "location": "Central US",
            "scale": null,
            "properties": {
                "siteName": "AmnestyWebApp(Amnesty)",
                "domainId": null,
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_AmnestyWebApp_name'))]",
                "[resourceId('Microsoft.Web/sites/slots', parameters('sites_AmnestyWebApp_name'), parameters('slots_Amnesty_name'))]"
            ]
        }
    ]
}