/*Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.*/
{
  /*This is A:  A means that we will not deploy ExpressRoute, and we will not configure 
  Multiple VPNs in Active/Active Mode */
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },
    "templateLink": {
      "type": "string",
      "defaultValue": "site1/af_vnet_azuredeploy1_servicesB..json",
      "metadata": {
        "description": "The parameter file for the second site's GW."
      }
    },
    /*in the metadata spreadsheet, on the VNET tab, filter on VNET104
    select the columns with Temlate and grouped by color. */
    "vnet304vnetName": {
      "type": "string",
      "defaultValue": "serviceseu1",
      "metadata": {
        "description": "Arbitrary name for the new VNET."
      }
    },
    "vnet304vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.130.184.0/21",
      "metadata": {
        "description": "IP address range for the new VNET."
      }
    },
    "vnet304SubscriptionID": {
      "type": "string",
      "defaultValue": "30457dd5-e56b-416b-9228-d48b37fe7caa",
      "metadata": {
        "description": "IP Subscription ID of the VNET."
      }
    },
    "vnet304ResourceGroupName": {
      "type": "string",
      "defaultValue": "rgVNETserviceseu1",
      "metadata": {
        "description": "ResouceGroup of the VNET."
      }
    },
    "vnet304locationName": {
      "type": "string",
      "defaultValue": "northeurope",
      "metadata": {
        "description": "IP Location of the VNET."
      }
    },
    "vnet304dnsServers": {
      "type": "array",
      "defaultValue": [
        "10.130.56.11",
        "10.130.120.11",
        "10.130.184.11",
        "10.130.248.11"
      ],
      "metadata": {
        "description": "DNS Servers of the VNET."
      }
    },
    "vnet304dnsPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "DNS Prefix of the VNET."
      }
    },
    /*
    Using the metadata spreadsheet, the subnnet tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "snet374Name": {
      "type": "string",
      "defaultValue": "Services600",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet374IP": {
      "type": "string",
      "defaultValue": "10.130.184.0/24",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet374NSGName": {
      "type": "string",
      "defaultValue": "nsgServices600",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet375Name": {
      "type": "string",
      "defaultValue": "ServicesLB625",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet375IP": {
      "type": "string",
      "defaultValue": "10.130.186.0/25",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet375NSGName": {
      "type": "string",
      "defaultValue": "nsgServicesLB625",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet380Name": {
      "type": "string",
      "defaultValue": "RTRInsideTest680",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet380IP": {
      "type": "string",
      "defaultValue": "10.130.187.0/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet380NSGName": {
      "type": "string",
      "defaultValue": "nsgRTRInsideTest680",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet382Name": {
      "type": "string",
      "defaultValue": "FWIntTest681",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet382IP": {
      "type": "string",
      "defaultValue": "10.130.187.16/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet382NSGName": {
      "type": "string",
      "defaultValue": "nsgFWIntTest681",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet383Name": {
      "type": "string",
      "defaultValue": "RTROutsideTest682",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet383IP": {
      "type": "string",
      "defaultValue": "10.130.187.32/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet383NSGName": {
      "type": "string",
      "defaultValue": "nsgRTROutsideTest682",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet384Name": {
      "type": "string",
      "defaultValue": "FW_ExtTest683",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet384IP": {
      "type": "string",
      "defaultValue": "10.130.187.64/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet384NSGName": {
      "type": "string",
      "defaultValue": "nsgFW_ExtTest683",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet376Name": {
      "type": "string",
      "defaultValue": "DMZ650",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet376IP": {
      "type": "string",
      "defaultValue": "10.130.188.0/25",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet376NSGName": {
      "type": "string",
      "defaultValue": "nsgDMZ650",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet379Name": {
      "type": "string",
      "defaultValue": "DMZLB655",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet379IP": {
      "type": "string",
      "defaultValue": "10.130.189.0/25",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet379NSGName": {
      "type": "string",
      "defaultValue": "nsgDMZLB655",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet377Name": {
      "type": "string",
      "defaultValue": "UserTier0660",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet377IP": {
      "type": "string",
      "defaultValue": "10.130.190.0/26",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet377NSGName": {
      "type": "string",
      "defaultValue": "nsgUserTier0660",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet378Name": {
      "type": "string",
      "defaultValue": "UserTier1661",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet378IP": {
      "type": "string",
      "defaultValue": "10.130.190.64/26",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet378NSGName": {
      "type": "string",
      "defaultValue": "nsgUserTier1661",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet385Name": {
      "type": "string",
      "defaultValue": "UserTier2662",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet385IP": {
      "type": "string",
      "defaultValue": "10.130.190.128/26",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet385NSGName": {
      "type": "string",
      "defaultValue": "nsgUserTier2662",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet315Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet315IP": {
      "type": "string",
      "defaultValue": "10.130.191.224/27",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    /*
    Using the metadata spreadsheet, the Peering tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "pr304PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu1toProdeu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr304Source": {
      "type": "string",
      "defaultValue": "serviceseu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr304destSubscriptionID": {
      "type": "string",
      "defaultValue": "4a0d1d83-f557-4065-8423-be499038298a",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr304destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNETprodeu1",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr304DestinationVNET": {
      "type": "string",
      "defaultValue": "prodeu1",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr304allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr304allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr304allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr304useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    "pr305PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu1toHbieu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr305Source": {
      "type": "string",
      "defaultValue": "serviceseu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr305destSubscriptionID": {
      "type": "string",
      "defaultValue": "97eba262-9086-4a3e-9770-dcfef6c3df30",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr305destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNEThbieu1",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr305DestinationVNET": {
      "type": "string",
      "defaultValue": "hbieu1",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr305allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr305allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr305allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr305useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    "pr306PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu1toPreprodeu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr306Source": {
      "type": "string",
      "defaultValue": "serviceseu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr306destSubscriptionID": {
      "type": "string",
      "defaultValue": "a4b962d2-6b17-4c38-af02-010a6e774379",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr306destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNETpreprodeu1",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr306DestinationVNET": {
      "type": "string",
      "defaultValue": "preprodeu1",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr306allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr306allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr306allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr306useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    "pr307PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu1toStorageeu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr307Source": {
      "type": "string",
      "defaultValue": "serviceseu1",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr307destSubscriptionID": {
      "type": "string",
      "defaultValue": "0223b7af-344f-42cd-bed2-5ebbc7d06d5d",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr307destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNETstorageeu1",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr307DestinationVNET": {
      "type": "string",
      "defaultValue": "storageeu1",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr307allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr307allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr307allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr307useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    /*
    Using the metadata spreadsheet, the localnetworkgateway tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "lngw03aname": {
      "type": "string",
      "defaultValue": "lngwremote3dc3a",
      "metadata": {
        "description": "Name for the destination connection between an Azure VNet and another network"
      }
    },
    "lngw03agatewayIPAddress": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": {
        "description": "IP address of local network gateway."
      }
    },
    "lngw03alocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.128.191.224/27",
      "metadata": {
        "description": "Local network site address space."
      }
    },
    "lngw03aConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "True or False, will you configure BGP with the LocalNetworkGateway"
      }
    },
    "lngw03aASNNumber": {
      "type": "int",
      "defaultValue": 65523,
      "metadata": {
        "description": "The BGP speaker's ASN."
      }
    },
    "lngw03aBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": "10.128.191.228",
      "metadata": {
        "description": "The BGP peering address and BGP identifier of this BGP speaker."
      }
    },
    "lngw03apeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The weight added to routes learned from this BGP speaker."
      }
    },
    "lngw03bname": {
      "type": "string",
      "defaultValue": "lngwremote3dc3b",
      "metadata": {
        "description": "Name for the destination connection between an Azure VNet and another network"
      }
    },
    "lngw03bgatewayIPAddress": {
      "type": "string",
      "defaultValue": "1.1.1.1",
      "metadata": {
        "description": "IP address of local network gateway."
      }
    },
    "lngw03blocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.128.191.224/27",
      "metadata": {
        "description": "Local network site address space."
      }
    },
    "lngw03bConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "True or False, will you configure BGP with the LocalNetworkGateway"
      }
    },
    "lngw03bASNNumber": {
      "type": "int",
      "defaultValue": 65523,
      "metadata": {
        "description": "The BGP speaker's ASN."
      }
    },
    "lngw03bBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": "10.128.191.229",
      "metadata": {
        "description": "The BGP peering address and BGP identifier of this BGP speaker."
      }
    },
    "lngw03bpeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The weight added to routes learned from this BGP speaker."
      }
    },
    /*
    Using the metadata spreadsheet, the gateway tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "gw304vGatewayName": {
      "type": "string",
      "defaultValue": "gwserviceseu1",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gw304vvnetName": {
      "type": "string",
      "defaultValue": "serviceseu1",
      "metadata": {
        "description": "The VNET the gateway is associated with."
      }
    },
    "gw304vGatewayType": {
      "type": "string",
      "defaultValue": "Vpn",
      "metadata": {
        "description": "The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'."
      }
    },
    "gw304vVPNType": {
      "type": "string",
      "defaultValue": "RouteBased",
      "metadata": {
        "description": "The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'."
      }
    },
    "gw304vEnableActiveActive": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "ActiveActive flag"
      }
    },
    "gw304vgwSKUNameTier": {
      "type": "string",
      "defaultValue": "VpnGW1",
      "metadata": {
        "description": "The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway."
      }
    },
    "gw304vPublicIPName1": {
      "type": "string",
      "defaultValue": "gwserviceseu1_gwpip1",
      "metadata": {
        "description": "IP configurations for virtual network gateway."
      }
    },
    "gw304vPublicIPName2": {
      "type": "string",
      "defaultValue": "gwserviceseu1_gwpip2",
      "metadata": {
        "description": "IP configurations for virtual network gateway."
      }
    },
    "gw304venableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether BGP is enabled for this virtual network gateway or not."
      }
    },
    "gw304vbgpASN": {
      "type": "int",
      "defaultValue": 65523,
      "metadata": {
        "description": "The BGP speaker's ASN.."
      }
    },
    "gw304vbgpRoutingWeight": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "The weight added to routes learned from this BGP speaker."
      }
    },
    /*
    Using the metadata spreadsheet, the connection tab, filter results on VNET104, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "cnct300ConnectionName": {
      "type": "string",
      "defaultValue": "IPSecgwserviceseu1Tolngwremote3dc3a",
      "metadata": {
        "description": "Arbitrary name for the new connection between an Azure VNet and another network"
      }
    },
    "cnct300gwName": {
      "type": "string",
      "defaultValue": "gwserviceseu1",
      "metadata": {
        "description": "The reference to the virtual network gateway resource"
      }
    },
    "cnct300connectionType": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": {
        "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)"
      }
    },
    "cnct300remoteGWName": {
      "type": "string",
      "defaultValue": "lngwremote3dc3a",
      "metadata": {
        "description": "The reference to the local network gateway or remote gateway resource"
      }
    },
    "cnct300sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": {
        "description": "The IPSec shared key"
      }
    },
    "cnct300routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The routing weight"
      }
    },
    "cnct300enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "EnableBGP flag"
      }
    },
    "cnct301ConnectionName": {
      "type": "string",
      "defaultValue": "IPSecgwserviceseu1Tolngwremote3dc3b",
      "metadata": {
        "description": "Arbitrary name for the new connection between an Azure VNet and another network"
      }
    },
    "cnct301gwName": {
      "type": "string",
      "defaultValue": "gwserviceseu1",
      "metadata": {
        "description": "The reference to the virtual network gateway resource"
      }
    },
    "cnct301connectionType": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": {
        "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)"
      }
    },
    "cnct301remoteGWName": {
      "type": "string",
      "defaultValue": "lngwremote3dc3b",
      "metadata": {
        "description": "The reference to the local network gateway or remote gateway resource"
      }
    },
    "cnct301sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": {
        "description": "The IPSec shared key"
      }
    },
    "cnct301routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The routing weight"
      }
    },
    "cnct301enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "EnableBGP flag"
      }
    },
  }, /*Keep this line*/
  "variables": {
    "apiVersion": "2017-06-01",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet304vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('snet315Name'))]"
  },
  "resources": [ /*go to the Metadata spreadsheet, NSGGroups tab, filter on VNET 104
    Select the Resources that are grouped by color*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet374NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet375NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet376NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet379NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet377NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet378NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet385NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet380NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet382NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet384NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet383NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    /*In the metadata spreadsheet, on the VNET Tab, filter on VNET104
          select the columns with Resource and grouped by Color. */
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet304vnetName')]",
      "location": "[parameters('vnet304locationName')]",
      "tags": {
        "displayName": "AzureFoundation VNet Definition"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnet304vnetAddressPrefix')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": "[parameters('vnet304dnsServers')]"
        },
        "subnets": [
          /*In the metadata spreadsheet, on the Subnet Tab, filter on VNET104
          select the columns with Resource and grouped by Color. */
          {
            "name": "[parameters('snet374Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet374IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet374NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet375Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet375IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet375NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet380Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet380IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet380NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet382Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet382IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet382NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet383Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet383IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet383NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet384Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet384IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet384NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet376Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet376IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet376NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet379Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet379IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet379NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet377Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet377IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet377NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet378Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet378IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet378NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet385Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet385IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet385NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet315Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet315IP')]"
            }
          }
        ] /*Keep this Line*/
      },
      "resources": [ /*Keep This Line*/
        /*In the Metadata, select VNET304 on the Peering Tab and select the Resources */
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr304PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr304allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr304allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr304allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr304useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr304destSubscriptionID'), '/resourceGroups/', parameters('pr304destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr304DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet304vnetName'))]"
          ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr305PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr305allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr305allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr305allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr305useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr305destSubscriptionID'), '/resourceGroups/', parameters('pr305destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr305DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet304vnetName'))]"
          ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr306PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr306allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr306allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr306allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr306useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr306destSubscriptionID'), '/resourceGroups/', parameters('pr306destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr306DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet304vnetName'))]"
          ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr307PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr307allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr307allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr307allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr307useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr307destSubscriptionID'), '/resourceGroups/', parameters('pr307destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr307DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet304vnetName'))]"
          ]
        },
      ], /*Keep This Line*/
      "dependsOn": /*Keep This Line*/ [ /*Keep This Line*/
        /*Using the metadata template on the Subnet Tab, filter to VNET104 and select
          the columns with DependsOn and grouped by color*/
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet374NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet375NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet380NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet382NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet383NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet384NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet376NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet379NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet377NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet378NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet385NSGName'))]"
      ]
    },
    /*using the metadata spreadsheet goto the localnetworkgateway tab filter on VNET104
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw03aname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": "[parameters('lngw03alocalNetworkAddressSpace')]"
        },
        "bgpSettings": {
          "asn": "[parameters('lngw03aASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw03aBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw03apeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw03agatewayIPAddress')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw03bname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": "[parameters('lngw03blocalNetworkAddressSpace')]"
        },
        "bgpSettings": {
          "asn": "[parameters('lngw03bASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw03bBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw03bpeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw03bgatewayIPAddress')]"
      }
    },
    /*using the metadata spreadsheet goto the gateway tab filter on VNET104
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gw304vPublicIPName1')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gw304vPublicIPName2')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('gw304vGatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('gw304vPublicIPName1'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('gw304vPublicIPName2'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('gw304vvnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('gw304vPublicIPName1')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet799Ref')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gw304vPublicIPName1'))]"
              }
            }
          },
          {
            "name": "[parameters('gw304vPublicIPName2')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet799Ref')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gw304vPublicIPName2'))]"
              }
            }
          }
        ],
        "gatewayType": "[parameters('gw304vGatewayType')]",
        "vpnType": "[parameters('gw304vVPNType')]",
        "activeActive": "[parameters('gw304vEnableActiveActive')]",
        "enableBGP": "[parameters('gw304venableBGP')]",
        "bgpSettings": {
          "asn": "[parameters('gw304vbgpASN')]"
        },
        "sku": {
          "name": "[parameters('gw304vgwSKUNameTier')]",
          "tier": "[parameters('gw304vgwSKUNameTier')]"
        }
      }
    },
    /*using the metadata spreadsheet goto the Connection tab filter on VNET104
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('cnct300ConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct300gwName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('cnct300remoteGWName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct300gwName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('cnct300remoteGWName'))]"
        },
        "sharedKey": "[parameters('cnct300sharedKey')]",
        "connectionType": "[parameters('cnct300connectionType')]",
        "routingWeight": "[parameters('cnct300routingWeight')]",
        "enableBGP": "[parameters('cnct300enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('cnct301ConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct301gwName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('cnct301remoteGWName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct301gwName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('cnct301remoteGWName'))]"
        },
        "sharedKey": "[parameters('cnct301sharedKey')]",
        "connectionType": "[parameters('cnct301connectionType')]",
        "routingWeight": "[parameters('cnct301routingWeight')]",
        "enableBGP": "[parameters('cnct301enableBGP')]"
      }
    },
   
        ],
        "outputs": {}
      }