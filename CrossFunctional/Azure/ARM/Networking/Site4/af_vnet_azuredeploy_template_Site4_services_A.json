/*Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.*/
{
  /*This is A:  A means that we will not deploy ExpressRoute, and we will not configure 
  Multiple VPNs in Active/Active Mode */
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseUrl": {
      "defaultValue": "https://github.com/willstg/AzureFoundation/tree/master/arm/vnet/",
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      }
    },
    "templateLink": {
      "type": "string",
      "defaultValue": "site1/af_vnet_azuredeploy1_servicesB..json",
      "metadata": {
        "description": "The parameter file for the second site's GW."
      }
    },
    /*in the metadata spreadsheet, on the VNET tab, filter on VNET404
    select the columns with Temlate and grouped by color. */
    "vnet404vnetName": {
      "type": "string",
      "defaultValue": "serviceseu2",
      "metadata": {
        "description": "Arbitrary name for the new VNET."
      }
    },
    "vnet404vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.130.248.0/21",
      "metadata": {
        "description": "IP address range for the new VNET."
      }
    },
    "vnet404SubscriptionID": {
      "type": "string",
      "defaultValue": "30457dd5-e56b-416b-9228-d48b37fe7caa",
      "metadata": {
        "description": "IP Subscription ID of the VNET."
      }
    },
    "vnet404ResourceGroupName": {
      "type": "string",
      "defaultValue": "rgVNETserviceseu2",
      "metadata": {
        "description": "ResouceGroup of the VNET."
      }
    },
    "vnet404locationName": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": {
        "description": "IP Location of the VNET."
      }
    },
    "vnet404dnsServers": {
      "type": "array",
      "defaultValue": [
        "10.130.56.11",
        "10.130.120.11",
        "10.130.184.11",
        "10.130.248.11"
      ],
      "metadata": {
        "description": "DNS Servers of the VNET."
      }
    },
    "vnet404dnsPrefix": {
      "type": "string",
      "defaultValue": "contoso.org",
      "metadata": {
        "description": "DNS Prefix of the VNET."
      }
    },
    /*
    Using the metadata spreadsheet, the subnnet tab, filter results on VNET404, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "snet474Name": {
      "type": "string",
      "defaultValue": "Services600",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet474IP": {
      "type": "string",
      "defaultValue": "10.130.248.0/24",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet474NSGName": {
      "type": "string",
      "defaultValue": "nsgServices600",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet475Name": {
      "type": "string",
      "defaultValue": "ServicesLB625",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet475IP": {
      "type": "string",
      "defaultValue": "10.130.250.0/24",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet475NSGName": {
      "type": "string",
      "defaultValue": "nsgServicesLB625",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet480Name": {
      "type": "string",
      "defaultValue": "RTRInsideTest680",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet480IP": {
      "type": "string",
      "defaultValue": "10.130.251.0/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet480NSGName": {
      "type": "string",
      "defaultValue": "nsgRTRInsideTest680",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet482Name": {
      "type": "string",
      "defaultValue": "FWIntTest681",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet482IP": {
      "type": "string",
      "defaultValue": "10.130.251.16/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet482NSGName": {
      "type": "string",
      "defaultValue": "nsgFWIntTest681",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet483Name": {
      "type": "string",
      "defaultValue": "RTROutsideTest682",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet483IP": {
      "type": "string",
      "defaultValue": "10.130.251.32/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet483NSGName": {
      "type": "string",
      "defaultValue": "nsgRTROutsideTest682",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet484Name": {
      "type": "string",
      "defaultValue": "FW_ExtTest683",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet484IP": {
      "type": "string",
      "defaultValue": "10.130.251.64/28",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet484NSGName": {
      "type": "string",
      "defaultValue": "nsgFW_ExtTest683",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet476Name": {
      "type": "string",
      "defaultValue": "DMZ650",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet476IP": {
      "type": "string",
      "defaultValue": "10.130.252.0/24",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet476NSGName": {
      "type": "string",
      "defaultValue": "nsgDMZ650",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet479Name": {
      "type": "string",
      "defaultValue": "DMZLB655",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet479IP": {
      "type": "string",
      "defaultValue": "10.130.253.0/25",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet479NSGName": {
      "type": "string",
      "defaultValue": "nsgDMZLB655",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet477Name": {
      "type": "string",
      "defaultValue": "UserTier0660",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet477IP": {
      "type": "string",
      "defaultValue": "10.130.254.0/26",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet477NSGName": {
      "type": "string",
      "defaultValue": "nsgUserTier0660",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet478Name": {
      "type": "string",
      "defaultValue": "UserTier1661",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet478IP": {
      "type": "string",
      "defaultValue": "10.130.254.64/26",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet478NSGName": {
      "type": "string",
      "defaultValue": "nsgUserTier1661",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet485Name": {
      "type": "string",
      "defaultValue": "UserTier2662",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet485IP": {
      "type": "string",
      "defaultValue": "10.130.254.128/26",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    "snet485NSGName": {
      "type": "string",
      "defaultValue": "nsgUserTier2662",
      "metadata": {
        "description": "Network Security Group to associate to the subnet."
      }
    },
    "snet415Name": {
      "type": "string",
      "defaultValue": "GatewaySubnet",
      "metadata": {
        "description": "Name of the subnet."
      }
    },
    "snet415IP": {
      "type": "string",
      "defaultValue": "10.130.255.224/27",
      "metadata": {
        "description": "CRI notation of the Subnet."
      }
    },
    /*
    Using the metadata spreadsheet, the Peering tab, filter results on VNET404, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "pr404PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu2toProdeu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr404Source": {
      "type": "string",
      "defaultValue": "serviceseu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr404destSubscriptionID": {
      "type": "string",
      "defaultValue": "4a0d1d83-f557-4065-8423-be499038298a",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr404destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNETprodeu2",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr404DestinationVNET": {
      "type": "string",
      "defaultValue": "prodeu2",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr404allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr404allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr404allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr404useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    "pr405PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu2toHbieu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr405Source": {
      "type": "string",
      "defaultValue": "serviceseu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr405destSubscriptionID": {
      "type": "string",
      "defaultValue": "97eba262-9086-4a3e-9770-dcfef6c3df30",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr405destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNEThbieu2",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr405DestinationVNET": {
      "type": "string",
      "defaultValue": "hbieu2",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr405allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr405allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr405allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr405useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    "pr406PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu2toPreprodeu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr406Source": {
      "type": "string",
      "defaultValue": "serviceseu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr406destSubscriptionID": {
      "type": "string",
      "defaultValue": "a4b962d2-6b17-4c38-af02-010a6e774379",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr406destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNETpreprodeu2",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr406DestinationVNET": {
      "type": "string",
      "defaultValue": "preprodeu2",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr406allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr406allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr406allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr406useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    "pr407PeeringName": {
      "type": "string",
      "defaultValue": "serviceseu2toStorageeu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr407Source": {
      "type": "string",
      "defaultValue": "serviceseu2",
      "metadata": {
        "description": "Arbitrary name for the new peering between an Azure VNet and another Azure VNET in the same region."
      }
    },
    "pr407destSubscriptionID": {
      "type": "string",
      "defaultValue": "0223b7af-344f-42cd-bed2-5ebbc7d06d5d",
      "metadata": {
        "description": "The subscription ID of the destination VNET Peer, needed to build the ResourceID."
      }
    },
    "pr407destResourceGroup": {
      "type": "string",
      "defaultValue": "rgVNETstorageeu2",
      "metadata": {
        "description": "Resource Group name of the destination VNET Peer, needed to build the resource ID."
      }
    },
    "pr407DestinationVNET": {
      "type": "string",
      "defaultValue": "storageeu2",
      "metadata": {
        "description": "Specific name for the source peering Azure Vnet."
      }
    },
    "pr407allowVNETAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic to access this VNET?"
      }
    },
    "pr407allowFwdAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic be forwarded to this VNET from another VNET outside the Peering relationship?"
      }
    },
    "pr407allowGWAccess": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Can traffic from peering network leverage the gateway?"
      }
    },
    "pr407useRemoteGateway": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Can traffic use the remote gateway?"
      }
    },
    /*
    Using the metadata spreadsheet, the localnetworkgateway tab, filter results on VNET404, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "lngw04aname": {
      "type": "string",
      "defaultValue": "lngwsite4adc4a",
      "metadata": {
        "description": "Name for the destination connection between an Azure VNet and another network"
      }
    },
    "lngw04agatewayIPAddress": {
      "type": "string",
      "defaultValue": "52.244.66.242",
      "metadata": {
        "description": "IP address of local network gateway."
      }
    },
    "lngw04alocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.128.254.224/27",
      "metadata": {
        "description": "Local network site address space."
      }
    },
    "lngw04aConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "True or False, will you configure BGP with the LocalNetworkGateway"
      }
    },
    "lngw04aASNNumber": {
      "type": "int",
      "defaultValue": 65524,
      "metadata": {
        "description": "The BGP speaker's ASN."
      }
    },
    "lngw04aBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": "10.128.254.228",
      "metadata": {
        "description": "The BGP peering address and BGP identifier of this BGP speaker."
      }
    },
    "lngw04apeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The weight added to routes learned from this BGP speaker."
      }
    },
    "lngw04bname": {
      "type": "string",
      "defaultValue": "lngwsite4bdc4b",
      "metadata": {
        "description": "Name for the destination connection between an Azure VNet and another network"
      }
    },
    "lngw04bgatewayIPAddress": {
      "type": "string",
      "defaultValue": "52.244.69.90",
      "metadata": {
        "description": "IP address of local network gateway."
      }
    },
    "lngw04blocalNetworkAddressSpace": {
      "type": "array",
      "defaultValue": "10.128.254.224/27",
      "metadata": {
        "description": "Local network site address space."
      }
    },
    "lngw04bConfigureBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "True or False, will you configure BGP with the LocalNetworkGateway"
      }
    },
    "lngw04bASNNumber": {
      "type": "int",
      "defaultValue": 65524,
      "metadata": {
        "description": "The BGP speaker's ASN."
      }
    },
    "lngw04bBGPPeerIPAddress": {
      "type": "string",
      "defaultValue": "10.128.254.229",
      "metadata": {
        "description": "The BGP peering address and BGP identifier of this BGP speaker."
      }
    },
    "lngw04bpeerWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The weight added to routes learned from this BGP speaker."
      }
    },
    /*
    Using the metadata spreadsheet, the gateway tab, filter results on VNET404, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "gw404vGatewayName": {
      "type": "string",
      "defaultValue": "gwserviceseu2",
      "metadata": {
        "description": "Arbitrary name for the new gateway"
      }
    },
    "gw404vvnetName": {
      "type": "string",
      "defaultValue": "serviceseu2",
      "metadata": {
        "description": "The VNET the gateway is associated with."
      }
    },
    "gw404vGatewayType": {
      "type": "string",
      "defaultValue": "Vpn",
      "metadata": {
        "description": "The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'."
      }
    },
    "gw404vVPNType": {
      "type": "string",
      "defaultValue": "RouteBased",
      "metadata": {
        "description": "The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'."
      }
    },
    "gw404vEnableActiveActive": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "ActiveActive flag"
      }
    },
    "gw404vgwSKUNameTier": {
      "type": "string",
      "defaultValue": "VpnGw1",
      "metadata": {
        "description": "The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway."
      }
    },
    "gw404vPublicIPName1": {
      "type": "string",
      "defaultValue": "gwserviceseu2_gwpip1",
      "metadata": {
        "description": "IP configurations for virtual network gateway."
      }
    },
    "gw404vPublicIPName2": {
      "type": "string",
      "defaultValue": "gwserviceseu2_gwpip2",
      "metadata": {
        "description": "IP configurations for virtual network gateway."
      }
    },
    "gw404venableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether BGP is enabled for this virtual network gateway or not."
      }
    },
    "gw404vbgpASN": {
      "type": "int",
      "defaultValue": 65524,
      "metadata": {
        "description": "The BGP speaker's ASN.."
      }
    },
    "gw404vbgpRoutingWeight": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "The weight added to routes learned from this BGP speaker."
      }
    },
    /*
    Using the metadata spreadsheet, the connection tab, filter results on VNET404, 
    Select the columnns that contain the word template and are color coded accordingly.
    */
    "cnct400ConnectionName": {
      "type": "string",
      "defaultValue": "IPSecgwserviceseu2Tolngwsite4adc4a",
      "metadata": {
        "description": "Arbitrary name for the new connection between an Azure VNet and another network"
      }
    },
    "cnct400gwName": {
      "type": "string",
      "defaultValue": "gwserviceseu2",
      "metadata": {
        "description": "The reference to the virtual network gateway resource"
      }
    },
    "cnct400connectionType": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": {
        "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)"
      }
    },
    "cnct400remoteGWName": {
      "type": "string",
      "defaultValue": "lngwsite4adc4a",
      "metadata": {
        "description": "The reference to the local network gateway or remote gateway resource"
      }
    },
    "cnct400sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": {
        "description": "The IPSec shared key"
      }
    },
    "cnct400routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The routing weight"
      }
    },
    "cnct400enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "EnableBGP flag"
      }
    },
    "cnct401ConnectionName": {
      "type": "string",
      "defaultValue": "IPSecgwserviceseu2Tolngwsite4bdc4b",
      "metadata": {
        "description": "Arbitrary name for the new connection between an Azure VNet and another network"
      }
    },
    "cnct401gwName": {
      "type": "string",
      "defaultValue": "gwserviceseu2",
      "metadata": {
        "description": "The reference to the virtual network gateway resource"
      }
    },
    "cnct401connectionType": {
      "type": "string",
      "defaultValue": "IPSec",
      "metadata": {
        "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)"
      }
    },
    "cnct401remoteGWName": {
      "type": "string",
      "defaultValue": "lngwsite4bdc4b",
      "metadata": {
        "description": "The reference to the local network gateway or remote gateway resource"
      }
    },
    "cnct401sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": {
        "description": "The IPSec shared key"
      }
    },
    "cnct401routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The routing weight"
      }
    },
    "cnct401enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "EnableBGP flag"
      }
    },
    "cnct402ConnectionName": {
      "type": "string",
      "defaultValue": "Vnet2Vnetgwserviceseu2Togwserviceseu1",
      "metadata": {
        "description": "Arbitrary name for the new connection between an Azure VNet and another network"
      }
    },
    "cnct402gwName": {
      "type": "string",
      "defaultValue": "gwserviceseu2",
      "metadata": {
        "description": "The reference to the virtual network gateway resource"
      }
    },
    "cnct402connectionType": {
      "type": "string",
      "defaultValue": "Vnet2Vnet",
      "metadata": {
        "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)"
      }
    },
    "cnct402remoteSubscriptionID": {
      "type": "string",
      "defaultValue": "30457dd5-e56b-416b-9228-d48b37fe7caa",
      "metadata": {
        "description": "The SubscriptionID of the remote VNET2VNET resource"
      }
    },
    "cnct402remoteResourceGroupName": {
      "type": "string",
      "defaultValue": "rgVNETserviceseu1",
      "metadata": {
        "description": "Remote Resource Group for VNET2VNET ResourceID creation"
      }
    },
    "cnct402remoteGWName": {
      "type": "string",
      "defaultValue": "gwserviceseu1",
      "metadata": {
        "description": "The reference to the local network gateway or remote gateway resource"
      }
    },
    "cnct402sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": {
        "description": "The IPSec shared key"
      }
    },
    "cnct402routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The routing weight"
      }
    },
    "cnct402enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "EnableBGP flag"
      }
    },
    "cnct402remoteLocation": {
      "type": "string",
      "defaultValue": "northeurope",
      "metadata": {
        "description": "The Region where the Vnet2Vnet connection is terminated"
      }
    },
    "cnct403ConnectionName": {
      "type": "string",
      "defaultValue": "Vnet2Vnetgwserviceseu2Togwservicesw2",
      "metadata": {
        "description": "Arbitrary name for the new connection between an Azure VNet and another network"
      }
    },
    "cnct403gwName": {
      "type": "string",
      "defaultValue": "gwserviceseu2",
      "metadata": {
        "description": "The reference to the virtual network gateway resource"
      }
    },
    "cnct403connectionType": {
      "type": "string",
      "defaultValue": "Vnet2Vnet",
      "metadata": {
        "description": "What type of a connection is this?  (ExpressRoute, IPSec, Vnet2Vnet)"
      }
    },
    "cnct403remoteSubscriptionID": {
      "type": "string",
      "defaultValue": "b352fe70-6fe2-4dcd-a153-ee002ed3da62",
      "metadata": {
        "description": "The SubscriptionID of the remote VNET2VNET resource"
      }
    },
    "cnct403remoteResourceGroupName": {
      "type": "string",
      "defaultValue": "rgVNETservicesw2",
      "metadata": {
        "description": "Remote Resource Group for VNET2VNET ResourceID creation"
      }
    },
    "cnct403remoteGWName": {
      "type": "string",
      "defaultValue": "gwservicesw2",
      "metadata": {
        "description": "The reference to the local network gateway or remote gateway resource"
      }
    },
    "cnct403sharedKey": {
      "type": "string",
      "defaultValue": "mysharedkey",
      "metadata": {
        "description": "The IPSec shared key"
      }
    },
    "cnct403routingWeight": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "The routing weight"
      }
    },
    "cnct403enableBGP": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "EnableBGP flag"
      }
    },
    "cnct403remoteLocation": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "The Region where the Vnet2Vnet connection is terminated"
      }
    },
  }, /*Keep this line*/
  "variables": {
    "apiVersion": "2017-06-01",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet404vnetName'))]",
    "subnet799Ref": "[concat(variables('vnetID'),'/subnets/',parameters('snet415Name'))]"
  },
  "resources": [ /*go to the Metadata spreadsheet, NSGGroups tab, filter on VNET 104
    Select the Resources that are grouped by color*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet474NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet475NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet476NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet479NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet477NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet478NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet485NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet480NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet482NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet484NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('snet483NSGName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": []
      }
    },
    /*In the metadata spreadsheet, on the VNET Tab, filter on VNET404
          select the columns with Resource and grouped by Color. */
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnet404vnetName')]",
      "location": "[parameters('vnet404locationName')]",
      "tags": {
        "displayName": "AzureFoundation VNet Definition"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnet404vnetAddressPrefix')]"
          ]
        },
        "dhcpOptions": {
          "dnsServers": "[parameters('vnet404dnsServers')]"
        },
        "subnets": [
          /*In the metadata spreadsheet, on the Subnet Tab, filter on VNET404
          select the columns with Resource and grouped by Color. */
          {
            "name": "[parameters('snet474Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet474IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet474NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet475Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet475IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet475NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet480Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet480IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet480NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet482Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet482IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet482NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet483Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet483IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet483NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet484Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet484IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet484NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet476Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet476IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet476NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet479Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet479IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet479NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet477Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet477IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet477NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet478Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet478IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet478NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet485Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet485IP')]",
              "networkSecurityGroup": {
                "id": "[resourceID('Microsoft.Network/networkSecurityGroups', parameters('snet485NSGName'))]"
              }
            }
          },
          {
            "name": "[parameters('snet415Name')]",
            "properties": {
              "addressPrefix": "[parameters('snet415IP')]"
            }
          }
        ] /*Keep this Line*/
      },
      "resources": [ /*Keep This Line*/
        /*In the Metadata, select VNET404 on the Peering Tab and select the Resources */
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr404PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr404allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr404allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr404allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr404useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr404destSubscriptionID'), '/resourceGroups/', parameters('pr404destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr404DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]"
          ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr405PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr405allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr405allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr405allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr405useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr405destSubscriptionID'), '/resourceGroups/', parameters('pr405destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr405DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]"
          ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr406PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr406allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr406allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr406allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr406useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr406destSubscriptionID'), '/resourceGroups/', parameters('pr406destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr406DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]"
          ]
        },
        {
          "apiVersion": "[variables('apiversion')]",
          "type": "virtualNetworkPeerings",
          "name": "[parameters('pr407PeeringName')]",
          "location": "[resourceGroup().location]",
          "comments": "Make sure you put these resources within the Resources of a VNET, like a subnet",
          "properties": {
            "allowVirtualNetworkAccess": "[parameters('pr407allowVNETAccess')]",
            "allowForwardedTraffic": "[parameters('pr407allowFwdAccess')]",
            "allowGatewayTransit": "[parameters('pr407allowGWAccess')]",
            "useRemoteGateways": "[parameters('pr407useRemoteGateway')]",
            "remoteVirtualNetwork": {
              "id": "[concat('/subscriptions/', parameters('pr407destSubscriptionID'), '/resourceGroups/', parameters('pr407destResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('pr407DestinationVNET'))]"
            }
          },
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('vnet404vnetName'))]"
          ]
        },
      ], /*Keep This Line*/
      "dependsOn": /*Keep This Line*/ [ /*Keep This Line*/
        /*Using the metadata template on the Subnet Tab, filter to VNET404 and select
          the columns with DependsOn and grouped by color*/
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet474NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet475NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet480NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet482NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet483NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet484NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet476NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet479NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet477NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet478NSGName'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('snet485NSGName'))]"
      ]
    },
    /*using the metadata spreadsheet goto the localnetworkgateway tab filter on VNET404
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw04aname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": "[parameters('lngw04alocalNetworkAddressSpace')]"
        },
        "bgpSettings": {
          "asn": "[parameters('lngw04aASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw04aBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw04apeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw04agatewayIPAddress')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/localNetworkGateways",
      "name": "[parameters('lngw04bname')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "localNetworkAddressSpace": {
          "addressPrefixes": "[parameters('lngw04blocalNetworkAddressSpace')]"
        },
        "bgpSettings": {
          "asn": "[parameters('lngw04bASNNumber')]",
          "bgpPeeringAddress": "[parameters('lngw04bBGPPeerIPAddress')]",
          "peerWeight": "[parameters('lngw04bpeerWeight')]"
        },
        "gatewayIpAddress": "[parameters('lngw04bgatewayIPAddress')]"
      }
    },
    /*using the metadata spreadsheet goto the gateway tab filter on VNET404
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gw404vPublicIPName1')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('gw404vPublicIPName2')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[parameters('gw404vGatewayName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('gw404vPublicIPName1'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('gw404vPublicIPName2'))]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('gw404vvnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[parameters('gw404vPublicIPName1')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet799Ref')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gw404vPublicIPName1'))]"
              }
            }
          },
          {
            "name": "[parameters('gw404vPublicIPName2')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet799Ref')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gw404vPublicIPName2'))]"
              }
            }
          }
        ],
        "gatewayType": "[parameters('gw404vGatewayType')]",
        "vpnType": "[parameters('gw404vVPNType')]",
        "activeActive": "[parameters('gw404vEnableActiveActive')]",
        "enableBGP": "[parameters('gw404venableBGP')]",
        "bgpSettings": {
          "asn": "[parameters('gw404vbgpASN')]"
        },
        "sku": {
          "name": "[parameters('gw404vgwSKUNameTier')]",
          "tier": "[parameters('gw404vgwSKUNameTier')]"
        }
      }
    },
    /*using the metadata spreadsheet goto the Connection tab filter on VNET404
    and copy the gateway information here*/
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('cnct400ConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct400gwName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('cnct400remoteGWName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct400gwName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('cnct400remoteGWName'))]"
        },
        "sharedKey": "[parameters('cnct400sharedKey')]",
        "connectionType": "[parameters('cnct400connectionType')]",
        "routingWeight": "[parameters('cnct400routingWeight')]",
        "enableBGP": "[parameters('cnct400enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[parameters('cnct401ConnectionName')]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct401gwName'))]",
        "[concat('Microsoft.Network/localNetworkGateways/', parameters('cnct401remoteGWName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct401gwName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('cnct401remoteGWName'))]"
        },
        "sharedKey": "[parameters('cnct401sharedKey')]",
        "connectionType": "[parameters('cnct401connectionType')]",
        "routingWeight": "[parameters('cnct401routingWeight')]",
        "enableBGP": "[parameters('cnct401enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[concat('cnct1',parameters('cnct402ConnectionName'))]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct402gwName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct402gwName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[concat('/subscriptions/',parameters('cnct402remoteSubscriptionID'),'/resourceGroups/',parameters('cnct402remoteResourceGroupName'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('cnct402remoteGWName'))]"
        },
        "sharedKey": "[parameters('cnct402sharedKey')]",
        "connectionType": "[parameters('cnct402connectionType')]",
        "routingWeight": "[parameters('cnct402routingWeight')]",
        "enableBGP": "[parameters('cnct402enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[concat('cnct2',parameters('cnct402ConnectionName'))]",
      "type": "Microsoft.Network/connections",
      "location": "[parameters('cnct402remoteLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct402gwName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[concat('/subscriptions/',parameters('cnct402remoteSubscriptionID'),'/resourceGroups/',parameters('cnct402remoteResourceGroupName'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('cnct402remoteGWName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct402gwName'))]"
        },
        "sharedKey": "[parameters('cnct402sharedKey')]",
        "connectionType": "[parameters('cnct402connectionType')]",
        "routingWeight": "[parameters('cnct402routingWeight')]",
        "enableBGP": "[parameters('cnct402enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[concat('cnct1',parameters('cnct403ConnectionName'))]",
      "type": "Microsoft.Network/connections",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct403gwName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct403gwName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[concat('/subscriptions/',parameters('cnct403remoteSubscriptionID'),'/resourceGroups/',parameters('cnct403remoteResourceGroupName'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('cnct403remoteGWName'))]"
        },
        "sharedKey": "[parameters('cnct403sharedKey')]",
        "connectionType": "[parameters('cnct403connectionType')]",
        "routingWeight": "[parameters('cnct403routingWeight')]",
        "enableBGP": "[parameters('cnct403enableBGP')]"
      }
    },
    {
      "apiVersion": "[variables('apiversion')]",
      "name": "[concat('cnct2',parameters('cnct403ConnectionName'))]",
      "type": "Microsoft.Network/connections",
      "location": "[parameters('cnct403remoteLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworkGateways/', parameters('cnct403gwName'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[concat('/subscriptions/',parameters('cnct403remoteSubscriptionID'),'/resourceGroups/',parameters('cnct403remoteResourceGroupName'),'/providers/Microsoft.Network/VirtualNetworkGateways/', parameters('cnct403remoteGWName'))]"
        },
        "virtualNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('cnct403gwName'))]"
        },
        "sharedKey": "[parameters('cnct403sharedKey')]",
        "connectionType": "[parameters('cnct403connectionType')]",
        "routingWeight": "[parameters('cnct403routingWeight')]",
        "enableBGP": "[parameters('cnct403enableBGP')]"
      }
    }
  ],
  "outputs": {}
}